{"version":3,"file":"locked_fs.js","sourceRoot":"","sources":["../../../src/generic/locked_fs.ts"],"names":[],"mappings":"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","sourcesContent":["import Mutex from './mutex';\nimport { FileSystem, BFSOneArgCallback, BFSCallback } from '../core/file_system';\nimport { ApiError } from '../core/api_error';\nimport { FileFlag } from '../core/file_flag';\nimport { default as Stats } from '../core/stats';\nimport { File } from '../core/file';\nimport Cred from '../core/cred';\nimport type { Buffer } from 'buffer';\n\n/**\n * This class serializes access to an underlying async filesystem.\n * For example, on an OverlayFS instance with an async lower\n * directory operations like rename and rmdir may involve multiple\n * requests involving both the upper and lower filesystems -- they\n * are not executed in a single atomic step.  OverlayFS uses this\n * LockedFS to avoid having to reason about the correctness of\n * multiple requests interleaving.\n */\nexport default class LockedFS<T extends FileSystem> implements FileSystem {\n\tprivate _fs: T;\n\tprivate _mu: Mutex;\n\n\tconstructor(fs: T) {\n\t\tthis._fs = fs;\n\t\tthis._mu = new Mutex();\n\t}\n\n\tpublic getName(): string {\n\t\treturn 'LockedFS<' + this._fs.getName() + '>';\n\t}\n\n\tpublic getFSUnlocked(): T {\n\t\treturn this._fs;\n\t}\n\n\tpublic diskSpace(p: string, cb: (total: number, free: number) => any): void {\n\t\t// FIXME: should this lock?\n\t\tthis._fs.diskSpace(p, cb);\n\t}\n\n\tpublic isReadOnly(): boolean {\n\t\treturn this._fs.isReadOnly();\n\t}\n\n\tpublic supportsLinks(): boolean {\n\t\treturn this._fs.supportsLinks();\n\t}\n\n\tpublic supportsProps(): boolean {\n\t\treturn this._fs.supportsProps();\n\t}\n\n\tpublic supportsSynch(): boolean {\n\t\treturn this._fs.supportsSynch();\n\t}\n\n\tpublic rename(oldPath: string, newPath: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.rename(oldPath, newPath, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic renameSync(oldPath: string, newPath: string, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.renameSync(oldPath, newPath, cred);\n\t}\n\n\tpublic stat(p: string, isLstat: boolean, cred: Cred, cb: BFSCallback<Stats>): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.stat(p, isLstat, cred, (err?: ApiError, stat?: Stats) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err, stat);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic statSync(p: string, isLstat: boolean, cred: Cred): Stats {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.statSync(p, isLstat, cred);\n\t}\n\n\tpublic access(p: string, mode: number, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.access(p, mode, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic accessSync(p: string, mode: number, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.accessSync(p, mode, cred);\n\t}\n\n\tpublic open(p: string, flag: FileFlag, mode: number, cred: Cred, cb: BFSCallback<File>): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.open(p, flag, mode, cred, (err?: ApiError, fd?: File) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err, fd);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic openSync(p: string, flag: FileFlag, mode: number, cred: Cred): File {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.openSync(p, flag, mode, cred);\n\t}\n\n\tpublic unlink(p: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.unlink(p, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic unlinkSync(p: string, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.unlinkSync(p, cred);\n\t}\n\n\tpublic rmdir(p: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.rmdir(p, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic rmdirSync(p: string, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.rmdirSync(p, cred);\n\t}\n\n\tpublic mkdir(p: string, mode: number, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.mkdir(p, mode, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic mkdirSync(p: string, mode: number, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.mkdirSync(p, mode, cred);\n\t}\n\n\tpublic readdir(p: string, cred: Cred, cb: BFSCallback<string[]>): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.readdir(p, cred, (err?: ApiError, files?: string[]) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err, files);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic readdirSync(p: string, cred: Cred): string[] {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.readdirSync(p, cred);\n\t}\n\n\tpublic exists(p: string, cred: Cred, cb: (exists: boolean) => void): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.exists(p, cred, (exists: boolean) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(exists);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic existsSync(p: string, cred: Cred): boolean {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.existsSync(p, cred);\n\t}\n\n\tpublic realpath(p: string, cache: { [path: string]: string }, cred: Cred, cb: BFSCallback<string>): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.realpath(p, cache, cred, (err?: ApiError, resolvedPath?: string) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err, resolvedPath);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic realpathSync(p: string, cache: { [path: string]: string }, cred: Cred): string {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.realpathSync(p, cache, cred);\n\t}\n\n\tpublic truncate(p: string, len: number, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.truncate(p, len, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic truncateSync(p: string, len: number, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.truncateSync(p, len, cred);\n\t}\n\n\tpublic readFile(fname: string, encoding: string, flag: FileFlag, cred: Cred, cb: BFSCallback<string | Buffer>): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.readFile(fname, encoding, flag, cred, (err?: ApiError, data?: any) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err, data);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic readFileSync(fname: string, encoding: string, flag: FileFlag, cred: Cred): any {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.readFileSync(fname, encoding, flag, cred);\n\t}\n\n\tpublic writeFile(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.writeFile(fname, data, encoding, flag, mode, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic writeFileSync(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.writeFileSync(fname, data, encoding, flag, mode, cred);\n\t}\n\n\tpublic appendFile(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.appendFile(fname, data, encoding, flag, mode, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic appendFileSync(fname: string, data: any, encoding: string, flag: FileFlag, mode: number, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.appendFileSync(fname, data, encoding, flag, mode, cred);\n\t}\n\n\tpublic chmod(p: string, isLchmod: boolean, mode: number, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.chmod(p, isLchmod, mode, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic chmodSync(p: string, isLchmod: boolean, mode: number, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.chmodSync(p, isLchmod, mode, cred);\n\t}\n\n\tpublic chown(p: string, isLchown: boolean, new_uid: number, new_gid: number, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.chown(p, isLchown, new_uid, new_gid, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic chownSync(p: string, isLchown: boolean, new_uid: number, new_gid: number, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.chownSync(p, isLchown, new_uid, new_gid, cred);\n\t}\n\n\tpublic utimes(p: string, atime: Date, mtime: Date, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.utimes(p, atime, mtime, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic utimesSync(p: string, atime: Date, mtime: Date, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.utimesSync(p, atime, mtime, cred);\n\t}\n\n\tpublic link(srcpath: string, dstpath: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.link(srcpath, dstpath, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic linkSync(srcpath: string, dstpath: string, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.linkSync(srcpath, dstpath, cred);\n\t}\n\n\tpublic symlink(srcpath: string, dstpath: string, type: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.symlink(srcpath, dstpath, type, cred, (err?: ApiError) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic symlinkSync(srcpath: string, dstpath: string, type: string, cred: Cred): void {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.symlinkSync(srcpath, dstpath, type, cred);\n\t}\n\n\tpublic readlink(p: string, cred: Cred, cb: BFSCallback<string>): void {\n\t\tthis._mu.lock(() => {\n\t\t\tthis._fs.readlink(p, cred, (err?: ApiError, linkString?: string) => {\n\t\t\t\tthis._mu.unlock();\n\t\t\t\tcb(err, linkString);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic readlinkSync(p: string, cred: Cred): string {\n\t\tif (this._mu.isLocked()) {\n\t\t\tthrow new Error('invalid sync call');\n\t\t}\n\t\treturn this._fs.readlinkSync(p, cred);\n\t}\n}\n"]}