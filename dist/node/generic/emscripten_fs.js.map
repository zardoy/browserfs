{"version":3,"file":"emscripten_fs.js","sourceRoot":"","sources":["../../../src/generic/emscripten_fs.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Defines an Emscripten file system object for use in the Emscripten virtual\n * filesystem. Allows you to use synchronous BrowserFS file systems from within\n * Emscripten.\n *\n * You can construct a BFSEmscriptenFS, mount it using its mount command,\n * and then mount it into Emscripten.\n *\n * Adapted from Emscripten's NodeFS:\n * https://raw.github.com/kripken/emscripten/master/src/library_nodefs.js\n */\nimport FS from '../core/FS';\nimport fs from '../core/node_fs';\nimport NodeStats from '../core/stats';\nimport { uint8Array2Buffer } from '../core/util';\n\nexport interface Stats {\n\tdev: number;\n\tino: number;\n\tmode: number;\n\tnlink: number;\n\tuid: number;\n\tgid: number;\n\trdev: number;\n\tsize: number;\n\tblksize: number;\n\tblocks: number;\n\tatime: Date;\n\tmtime: Date;\n\tctime: Date;\n\ttimestamp?: number;\n}\n\nexport interface EmscriptenFSNode {\n\tname: string;\n\tmode: number;\n\tparent: EmscriptenFSNode;\n\tmount: { opts: { root: string } };\n\tstream_ops: EmscriptenStreamOps;\n\tnode_ops: EmscriptenNodeOps;\n}\n\nexport interface EmscriptenStream {\n\tnode: EmscriptenFSNode;\n\tnfd: any;\n\tflags: string;\n\tposition: number;\n}\n\nexport interface EmscriptenNodeOps {\n\tgetattr(node: EmscriptenFSNode): Stats;\n\tsetattr(node: EmscriptenFSNode, attr: Stats): void;\n\tlookup(parent: EmscriptenFSNode, name: string): EmscriptenFSNode;\n\tmknod(parent: EmscriptenFSNode, name: string, mode: number, dev: any): EmscriptenFSNode;\n\trename(oldNode: EmscriptenFSNode, newDir: EmscriptenFSNode, newName: string): void;\n\tunlink(parent: EmscriptenFSNode, name: string): void;\n\trmdir(parent: EmscriptenFSNode, name: string): void;\n\treaddir(node: EmscriptenFSNode): string[];\n\tsymlink(parent: EmscriptenFSNode, newName: string, oldPath: string): void;\n\treadlink(node: EmscriptenFSNode): string;\n}\n\nexport interface EmscriptenStreamOps {\n\topen(stream: EmscriptenStream): void;\n\tclose(stream: EmscriptenStream): void;\n\tread(stream: EmscriptenStream, buffer: Uint8Array, offset: number, length: number, position: number): number;\n\twrite(stream: EmscriptenStream, buffer: Uint8Array, offset: number, length: number, position: number): number;\n\tllseek(stream: EmscriptenStream, offset: number, whence: number): number;\n}\n\nexport interface EmscriptenFS {\n\tnode_ops: EmscriptenNodeOps;\n\tstream_ops: EmscriptenStreamOps;\n\tmount(mount: { opts: { root: string } }): EmscriptenFSNode;\n\tcreateNode(parent: EmscriptenFSNode, name: string, mode: number, dev?: any): EmscriptenFSNode;\n\tgetMode(path: string): number;\n\trealPath(node: EmscriptenFSNode): string;\n}\n\nclass BFSEmscriptenStreamOps implements EmscriptenStreamOps {\n\tpublic PATH: any;\n\tprivate FS: any;\n\tprivate ERRNO_CODES: any;\n\tprivate nodefs: FS;\n\n\tconstructor(private fs: BFSEmscriptenFS) {\n\t\tthis.nodefs = fs.getNodeFS();\n\t\tthis.FS = fs.getFS();\n\t\tthis.PATH = fs.getPATH();\n\t\tthis.ERRNO_CODES = fs.getERRNO_CODES();\n\t}\n\n\tpublic open(stream: EmscriptenStream): void {\n\t\tconst path = this.fs.realPath(stream.node);\n\t\tconst FS = this.FS;\n\t\ttry {\n\t\t\tif (FS.isFile(stream.node.mode)) {\n\t\t\t\tstream.nfd = this.nodefs.openSync(path, this.fs.flagsToPermissionString(stream.flags));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t}\n\n\tpublic close(stream: EmscriptenStream): void {\n\t\tconst FS = this.FS;\n\t\ttry {\n\t\t\tif (FS.isFile(stream.node.mode) && stream.nfd) {\n\t\t\t\tthis.nodefs.closeSync(stream.nfd);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t}\n\n\tpublic read(stream: EmscriptenStream, buffer: Uint8Array, offset: number, length: number, position: number): number {\n\t\t// Avoid copying overhead by reading directly into buffer.\n\t\ttry {\n\t\t\treturn this.nodefs.readSync(stream.nfd, uint8Array2Buffer(buffer), offset, length, position);\n\t\t} catch (e) {\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t}\n\n\tpublic write(stream: EmscriptenStream, buffer: Uint8Array, offset: number, length: number, position: number): number {\n\t\t// Avoid copying overhead.\n\t\ttry {\n\t\t\treturn this.nodefs.writeSync(stream.nfd, uint8Array2Buffer(buffer), offset, length, position);\n\t\t} catch (e) {\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t}\n\n\tpublic llseek(stream: EmscriptenStream, offset: number, whence: number): number {\n\t\tlet position = offset;\n\t\tif (whence === 1) {\n\t\t\t// SEEK_CUR.\n\t\t\tposition += stream.position;\n\t\t} else if (whence === 2) {\n\t\t\t// SEEK_END.\n\t\t\tif (this.FS.isFile(stream.node.mode)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst stat = this.nodefs.fstatSync(stream.nfd);\n\t\t\t\t\tposition += stat.size;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) {\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES.EINVAL);\n\t\t}\n\n\t\tstream.position = position;\n\t\treturn position;\n\t}\n}\n\nclass BFSEmscriptenNodeOps implements EmscriptenNodeOps {\n\tprivate FS: any;\n\tprivate PATH: any;\n\tprivate ERRNO_CODES: any;\n\tprivate nodefs: FS;\n\n\tconstructor(private fs: BFSEmscriptenFS) {\n\t\tthis.nodefs = fs.getNodeFS();\n\t\tthis.FS = fs.getFS();\n\t\tthis.PATH = fs.getPATH();\n\t\tthis.ERRNO_CODES = fs.getERRNO_CODES();\n\t}\n\n\tpublic getattr(node: EmscriptenFSNode): Stats {\n\t\tconst path = this.fs.realPath(node);\n\t\tlet stat: NodeStats;\n\t\ttry {\n\t\t\tstat = this.nodefs.lstatSync(path);\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t\treturn {\n\t\t\tdev: stat.dev,\n\t\t\tino: stat.ino,\n\t\t\tmode: stat.mode,\n\t\t\tnlink: stat.nlink,\n\t\t\tuid: stat.uid,\n\t\t\tgid: stat.gid,\n\t\t\trdev: stat.rdev,\n\t\t\tsize: stat.size,\n\t\t\tatime: stat.atime,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tblksize: stat.blksize,\n\t\t\tblocks: stat.blocks,\n\t\t};\n\t}\n\n\tpublic setattr(node: EmscriptenFSNode, attr: Stats): void {\n\t\tconst path = this.fs.realPath(node);\n\t\ttry {\n\t\t\tif (attr.mode !== undefined) {\n\t\t\t\tthis.nodefs.chmodSync(path, attr.mode);\n\t\t\t\t// update the common node structure mode as well\n\t\t\t\tnode.mode = attr.mode;\n\t\t\t}\n\t\t\tif (attr.timestamp !== undefined) {\n\t\t\t\tconst date = new Date(attr.timestamp);\n\t\t\t\tthis.nodefs.utimesSync(path, date, date);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\t// Ignore not supported errors. Emscripten does utimesSync when it\n\t\t\t// writes files, but never really requires the value to be set.\n\t\t\tif (e.code !== 'ENOTSUP') {\n\t\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t\t}\n\t\t}\n\t\tif (attr.size !== undefined) {\n\t\t\ttry {\n\t\t\t\tthis.nodefs.truncateSync(path, attr.size);\n\t\t\t} catch (e) {\n\t\t\t\tif (!e.code) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic lookup(parent: EmscriptenFSNode, name: string): EmscriptenFSNode {\n\t\tconst path = this.PATH.join2(this.fs.realPath(parent), name);\n\t\tconst mode = this.fs.getMode(path);\n\t\treturn this.fs.createNode(parent, name, mode);\n\t}\n\n\tpublic mknod(parent: EmscriptenFSNode, name: string, mode: number, dev: any): EmscriptenFSNode {\n\t\tconst node = this.fs.createNode(parent, name, mode, dev);\n\t\t// create the backing node for this in the fs root as well\n\t\tconst path = this.fs.realPath(node);\n\t\ttry {\n\t\t\tif (this.FS.isDir(node.mode)) {\n\t\t\t\tthis.nodefs.mkdirSync(path, node.mode);\n\t\t\t} else {\n\t\t\t\tthis.nodefs.writeFileSync(path, '', { mode: node.mode });\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t\treturn node;\n\t}\n\n\tpublic rename(oldNode: EmscriptenFSNode, newDir: EmscriptenFSNode, newName: string): void {\n\t\tconst oldPath = this.fs.realPath(oldNode);\n\t\tconst newPath = this.PATH.join2(this.fs.realPath(newDir), newName);\n\t\ttry {\n\t\t\tthis.nodefs.renameSync(oldPath, newPath);\n\t\t\t// This logic is missing from the original NodeFS,\n\t\t\t// causing Emscripten's filesystem to think that the old file still exists.\n\t\t\toldNode.name = newName;\n\t\t\toldNode.parent = newDir;\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t}\n\n\tpublic unlink(parent: EmscriptenFSNode, name: string): void {\n\t\tconst path = this.PATH.join2(this.fs.realPath(parent), name);\n\t\ttry {\n\t\t\tthis.nodefs.unlinkSync(path);\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t}\n\n\tpublic rmdir(parent: EmscriptenFSNode, name: string) {\n\t\tconst path = this.PATH.join2(this.fs.realPath(parent), name);\n\t\ttry {\n\t\t\tthis.nodefs.rmdirSync(path);\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t}\n\n\tpublic readdir(node: EmscriptenFSNode): string[] {\n\t\tconst path = this.fs.realPath(node);\n\t\ttry {\n\t\t\t// Node does not list . and .. in directory listings,\n\t\t\t// but Emscripten expects it.\n\t\t\tconst contents = this.nodefs.readdirSync(path);\n\t\t\tcontents.push('.', '..');\n\t\t\treturn contents;\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t}\n\n\tpublic symlink(parent: EmscriptenFSNode, newName: string, oldPath: string): void {\n\t\tconst newPath = this.PATH.join2(this.fs.realPath(parent), newName);\n\t\ttry {\n\t\t\tthis.nodefs.symlinkSync(oldPath, newPath);\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t}\n\n\tpublic readlink(node: EmscriptenFSNode): string {\n\t\tconst path = this.fs.realPath(node);\n\t\ttry {\n\t\t\treturn this.nodefs.readlinkSync(path);\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t}\n}\n\nexport default class BFSEmscriptenFS implements EmscriptenFS {\n\t// This maps the integer permission modes from http://linux.die.net/man/3/open\n\t// to node.js-specific file open permission strings at http://nodejs.org/api/fs.html#fs_fs_open_path_flags_mode_callback\n\tpublic flagsToPermissionStringMap = {\n\t\t0 /*O_RDONLY*/: 'r',\n\t\t1 /*O_WRONLY*/: 'r+',\n\t\t2 /*O_RDWR*/: 'r+',\n\t\t64 /*O_CREAT*/: 'r',\n\t\t65 /*O_WRONLY|O_CREAT*/: 'r+',\n\t\t66 /*O_RDWR|O_CREAT*/: 'r+',\n\t\t129 /*O_WRONLY|O_EXCL*/: 'rx+',\n\t\t193 /*O_WRONLY|O_CREAT|O_EXCL*/: 'rx+',\n\t\t514 /*O_RDWR|O_TRUNC*/: 'w+',\n\t\t577 /*O_WRONLY|O_CREAT|O_TRUNC*/: 'w',\n\t\t578 /*O_CREAT|O_RDWR|O_TRUNC*/: 'w+',\n\t\t705 /*O_WRONLY|O_CREAT|O_EXCL|O_TRUNC*/: 'wx',\n\t\t706 /*O_RDWR|O_CREAT|O_EXCL|O_TRUNC*/: 'wx+',\n\t\t1024 /*O_APPEND*/: 'a',\n\t\t1025 /*O_WRONLY|O_APPEND*/: 'a',\n\t\t1026 /*O_RDWR|O_APPEND*/: 'a+',\n\t\t1089 /*O_WRONLY|O_CREAT|O_APPEND*/: 'a',\n\t\t1090 /*O_RDWR|O_CREAT|O_APPEND*/: 'a+',\n\t\t1153 /*O_WRONLY|O_EXCL|O_APPEND*/: 'ax',\n\t\t1154 /*O_RDWR|O_EXCL|O_APPEND*/: 'ax+',\n\t\t1217 /*O_WRONLY|O_CREAT|O_EXCL|O_APPEND*/: 'ax',\n\t\t1218 /*O_RDWR|O_CREAT|O_EXCL|O_APPEND*/: 'ax+',\n\t\t4096 /*O_RDONLY|O_DSYNC*/: 'rs',\n\t\t4098 /*O_RDWR|O_DSYNC*/: 'rs+',\n\t};\n\t/* tslint:disable:variable-name */\n\tpublic node_ops: EmscriptenNodeOps;\n\tpublic stream_ops: EmscriptenStreamOps;\n\t/* tslint:enable:variable-name */\n\n\tprivate FS: any;\n\tprivate PATH: any;\n\tprivate ERRNO_CODES: any;\n\tprivate nodefs: FS;\n\tconstructor(_FS = (<any>self)['FS'], _PATH = (<any>self)['PATH'], _ERRNO_CODES = (<any>self)['ERRNO_CODES'], nodefs: FS = fs) {\n\t\tthis.nodefs = nodefs;\n\t\tthis.FS = _FS;\n\t\tthis.PATH = _PATH;\n\t\tthis.ERRNO_CODES = _ERRNO_CODES;\n\t\tthis.node_ops = new BFSEmscriptenNodeOps(this);\n\t\tthis.stream_ops = new BFSEmscriptenStreamOps(this);\n\t}\n\n\tpublic mount(m: { opts: { root: string } }): EmscriptenFSNode {\n\t\treturn this.createNode(null, '/', this.getMode(m.opts.root), 0);\n\t}\n\n\tpublic createNode(parent: EmscriptenFSNode | null, name: string, mode: number, dev?: any): EmscriptenFSNode {\n\t\tconst FS = this.FS;\n\t\tif (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {\n\t\t\tthrow new FS.ErrnoError(this.ERRNO_CODES.EINVAL);\n\t\t}\n\t\tconst node = FS.createNode(parent, name, mode);\n\t\tnode.node_ops = this.node_ops;\n\t\tnode.stream_ops = this.stream_ops;\n\t\treturn node;\n\t}\n\n\tpublic getMode(path: string): number {\n\t\tlet stat: NodeStats;\n\t\ttry {\n\t\t\tstat = this.nodefs.lstatSync(path);\n\t\t} catch (e) {\n\t\t\tif (!e.code) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\tthrow new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);\n\t\t}\n\t\treturn stat.mode;\n\t}\n\n\tpublic realPath(node: EmscriptenFSNode): string {\n\t\tconst parts: string[] = [];\n\t\twhile (node.parent !== node) {\n\t\t\tparts.push(node.name);\n\t\t\tnode = node.parent;\n\t\t}\n\t\tparts.push(node.mount.opts.root);\n\t\tparts.reverse();\n\t\treturn this.PATH.join.apply(null, parts);\n\t}\n\n\tpublic flagsToPermissionString(flags: string | number): string {\n\t\tlet parsedFlags = typeof flags === 'string' ? parseInt(flags, 10) : flags;\n\t\tparsedFlags &= 0x1fff;\n\t\tif (parsedFlags in this.flagsToPermissionStringMap) {\n\t\t\treturn (<any>this.flagsToPermissionStringMap)[parsedFlags];\n\t\t} else {\n\t\t\treturn <string>flags;\n\t\t}\n\t}\n\n\tpublic getNodeFS() {\n\t\treturn this.nodefs;\n\t}\n\n\tpublic getFS() {\n\t\treturn this.FS;\n\t}\n\n\tpublic getPATH() {\n\t\treturn this.PATH;\n\t}\n\n\tpublic getERRNO_CODES() {\n\t\treturn this.ERRNO_CODES;\n\t}\n}\n"]}