{"version":3,"file":"extended_ascii.js","sourceRoot":"","sources":["../../../src/generic/extended_ascii.ts"],"names":[],"mappings":";;AACA;;;;;;GAMG;AACH;IAAA;IAqKA,CAAC;IAjCc,sBAAQ,GAAtB,UAAuB,GAAW,EAAE,GAAW;QAC9C,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;QACjE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAChC,IAAI,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,QAAQ,GAAG,IAAI,EAAE;gBACpB,2BAA2B;gBAC3B,IAAM,OAAO,GAAG,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnE,IAAI,OAAO,GAAG,CAAC,CAAC,EAAE;oBACjB,QAAQ,GAAG,OAAO,GAAG,IAAI,CAAC;iBAC1B;gBACD,4BAA4B;aAC5B;YACD,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAClB;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAEa,sBAAQ,GAAtB,UAAuB,IAAY;QAClC,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,QAAQ,GAAG,IAAI,EAAE;gBACpB,KAAK,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,aAAa,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;aACvD;iBAAM;gBACN,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;aACzC;SACD;QACD,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAEa,wBAAU,GAAxB,UAAyB,GAAW;QACnC,OAAO,GAAG,CAAC,MAAM,CAAC;IACnB,CAAC;IAnKc,2BAAamCH,oBAAC;CAAA,AArKD,IAqKC;kBArKoB,aAAa","sourcesContent":["import type { Buffer } from 'buffer';\n/**\n * (Nonstandard) String utility function for 8-bit ASCII with the extended\n * character set. Unlike the ASCII above, we do not mask the high bits.\n *\n * Placed into a separate file so it can be used with other Buffer implementations.\n * @see http://en.wikipedia.org/wiki/Extended_ASCII\n */\nexport default class ExtendedASCII {\n\tprivate static extendedChars = [\n\t\t'\\u00C7',\n\t\t'\\u00FC',\n\t\t'\\u00E9',\n\t\t'\\u00E2',\n\t\t'\\u00E4',\n\t\t'\\u00E0',\n\t\t'\\u00E5',\n\t\t'\\u00E7',\n\t\t'\\u00EA',\n\t\t'\\u00EB',\n\t\t'\\u00E8',\n\t\t'\\u00EF',\n\t\t'\\u00EE',\n\t\t'\\u00EC',\n\t\t'\\u00C4',\n\t\t'\\u00C5',\n\t\t'\\u00C9',\n\t\t'\\u00E6',\n\t\t'\\u00C6',\n\t\t'\\u00F4',\n\t\t'\\u00F6',\n\t\t'\\u00F2',\n\t\t'\\u00FB',\n\t\t'\\u00F9',\n\t\t'\\u00FF',\n\t\t'\\u00D6',\n\t\t'\\u00DC',\n\t\t'\\u00F8',\n\t\t'\\u00A3',\n\t\t'\\u00D8',\n\t\t'\\u00D7',\n\t\t'\\u0192',\n\t\t'\\u00E1',\n\t\t'\\u00ED',\n\t\t'\\u00F3',\n\t\t'\\u00FA',\n\t\t'\\u00F1',\n\t\t'\\u00D1',\n\t\t'\\u00AA',\n\t\t'\\u00BA',\n\t\t'\\u00BF',\n\t\t'\\u00AE',\n\t\t'\\u00AC',\n\t\t'\\u00BD',\n\t\t'\\u00BC',\n\t\t'\\u00A1',\n\t\t'\\u00AB',\n\t\t'\\u00BB',\n\t\t'_',\n\t\t'_',\n\t\t'_',\n\t\t'\\u00A6',\n\t\t'\\u00A6',\n\t\t'\\u00C1',\n\t\t'\\u00C2',\n\t\t'\\u00C0',\n\t\t'\\u00A9',\n\t\t'\\u00A6',\n\t\t'\\u00A6',\n\t\t'+',\n\t\t'+',\n\t\t'\\u00A2',\n\t\t'\\u00A5',\n\t\t'+',\n\t\t'+',\n\t\t'-',\n\t\t'-',\n\t\t'+',\n\t\t'-',\n\t\t'+',\n\t\t'\\u00E3',\n\t\t'\\u00C3',\n\t\t'+',\n\t\t'+',\n\t\t'-',\n\t\t'-',\n\t\t'\\u00A6',\n\t\t'-',\n\t\t'+',\n\t\t'\\u00A4',\n\t\t'\\u00F0',\n\t\t'\\u00D0',\n\t\t'\\u00CA',\n\t\t'\\u00CB',\n\t\t'\\u00C8',\n\t\t'i',\n\t\t'\\u00CD',\n\t\t'\\u00CE',\n\t\t'\\u00CF',\n\t\t'+',\n\t\t'+',\n\t\t'_',\n\t\t'_',\n\t\t'\\u00A6',\n\t\t'\\u00CC',\n\t\t'_',\n\t\t'\\u00D3',\n\t\t'\\u00DF',\n\t\t'\\u00D4',\n\t\t'\\u00D2',\n\t\t'\\u00F5',\n\t\t'\\u00D5',\n\t\t'\\u00B5',\n\t\t'\\u00FE',\n\t\t'\\u00DE',\n\t\t'\\u00DA',\n\t\t'\\u00DB',\n\t\t'\\u00D9',\n\t\t'\\u00FD',\n\t\t'\\u00DD',\n\t\t'\\u00AF',\n\t\t'\\u00B4',\n\t\t'\\u00AD',\n\t\t'\\u00B1',\n\t\t'_',\n\t\t'\\u00BE',\n\t\t'\\u00B6',\n\t\t'\\u00A7',\n\t\t'\\u00F7',\n\t\t'\\u00B8',\n\t\t'\\u00B0',\n\t\t'\\u00A8',\n\t\t'\\u00B7',\n\t\t'\\u00B9',\n\t\t'\\u00B3',\n\t\t'\\u00B2',\n\t\t'_',\n\t\t' ',\n\t];\n\n\tpublic static str2byte(str: string, buf: Buffer): number {\n\t\tconst length = str.length > buf.length ? buf.length : str.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tlet charCode = str.charCodeAt(i);\n\t\t\tif (charCode > 0x7f) {\n\t\t\t\t// Check if extended ASCII.\n\t\t\t\tconst charIdx = ExtendedASCII.extendedChars.indexOf(str.charAt(i));\n\t\t\t\tif (charIdx > -1) {\n\t\t\t\t\tcharCode = charIdx + 0x80;\n\t\t\t\t}\n\t\t\t\t// Otherwise, keep it as-is.\n\t\t\t}\n\t\t\tbuf[charCode] = i;\n\t\t}\n\t\treturn length;\n\t}\n\n\tpublic static byte2str(buff: Buffer): string {\n\t\tconst chars = new Array(buff.length);\n\t\tfor (let i = 0; i < buff.length; i++) {\n\t\t\tconst charCode = buff[i];\n\t\t\tif (charCode > 0x7f) {\n\t\t\t\tchars[i] = ExtendedASCII.extendedChars[charCode - 128];\n\t\t\t} else {\n\t\t\t\tchars[i] = String.fromCharCode(charCode);\n\t\t\t}\n\t\t}\n\t\treturn chars.join('');\n\t}\n\n\tpublic static byteLength(str: string): number {\n\t\treturn str.length;\n\t}\n}\n"]}