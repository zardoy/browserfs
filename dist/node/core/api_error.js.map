{"version":3,"file":"api_error.js","sourceRoot":"","sources":["../../../src/core/api_error.ts"],"names":[],"mappings":"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","sourcesContent":["import { Buffer } from 'buffer';\n/**\n * Standard libc error codes. Add more to this enum and ErrorStrings as they are\n * needed.\n * @url http://www.gnu.org/software/libc/manual/html_node/Error-Codes.html\n */\nexport enum ErrorCode {\n\tEPERM = 1,\n\tENOENT = 2,\n\tEIO = 5,\n\tEBADF = 9,\n\tEACCES = 13,\n\tEBUSY = 16,\n\tEEXIST = 17,\n\tENOTDIR = 20,\n\tEISDIR = 21,\n\tEINVAL = 22,\n\tEFBIG = 27,\n\tENOSPC = 28,\n\tEROFS = 30,\n\tENOTEMPTY = 39,\n\tENOTSUP = 95,\n}\n/* tslint:disable:variable-name */\n/**\n * Strings associated with each error code.\n * @hidden\n */\nexport const ErrorStrings: { [code: string]: string; [code: number]: string } = {};\nErrorStrings[ErrorCode.EPERM] = 'Operation not permitted.';\nErrorStrings[ErrorCode.ENOENT] = 'No such file or directory.';\nErrorStrings[ErrorCode.EIO] = 'Input/output error.';\nErrorStrings[ErrorCode.EBADF] = 'Bad file descriptor.';\nErrorStrings[ErrorCode.EACCES] = 'Permission denied.';\nErrorStrings[ErrorCode.EBUSY] = 'Resource busy or locked.';\nErrorStrings[ErrorCode.EEXIST] = 'File exists.';\nErrorStrings[ErrorCode.ENOTDIR] = 'File is not a directory.';\nErrorStrings[ErrorCode.EISDIR] = 'File is a directory.';\nErrorStrings[ErrorCode.EINVAL] = 'Invalid argument.';\nErrorStrings[ErrorCode.EFBIG] = 'File is too big.';\nErrorStrings[ErrorCode.ENOSPC] = 'No space left on disk.';\nErrorStrings[ErrorCode.EROFS] = 'Cannot modify a read-only file system.';\nErrorStrings[ErrorCode.ENOTEMPTY] = 'Directory is not empty.';\nErrorStrings[ErrorCode.ENOTSUP] = 'Operation is not supported.';\n/* tslint:enable:variable-name */\n\n/**\n * Represents a BrowserFS error. Passed back to applications after a failed\n * call to the BrowserFS API.\n */\nexport class ApiError extends Error implements NodeJS.ErrnoException {\n\tpublic static fromJSON(json: any): ApiError {\n\t\tconst err = new ApiError(json.errno, json.message, json.path);\n\t\terr.code = json.code;\n\t\terr.stack = json.stack;\n\t\treturn err;\n\t}\n\n\t/**\n\t * Creates an ApiError object from a buffer.\n\t */\n\tpublic static fromBuffer(buffer: Buffer, i: number = 0): ApiError {\n\t\treturn ApiError.fromJSON(JSON.parse(buffer.toString('utf8', i + 4, i + 4 + buffer.readUInt32LE(i))));\n\t}\n\n\tpublic static FileError(code: ErrorCode, p: string): ApiError {\n\t\treturn new ApiError(code, ErrorStrings[code], p);\n\t}\n\n\tpublic static EACCES(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.EACCES, path);\n\t}\n\n\tpublic static ENOENT(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.ENOENT, path);\n\t}\n\n\tpublic static EEXIST(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.EEXIST, path);\n\t}\n\n\tpublic static EISDIR(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.EISDIR, path);\n\t}\n\n\tpublic static ENOTDIR(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.ENOTDIR, path);\n\t}\n\n\tpublic static EPERM(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.EPERM, path);\n\t}\n\n\tpublic static ENOTEMPTY(path: string): ApiError {\n\t\treturn this.FileError(ErrorCode.ENOTEMPTY, path);\n\t}\n\n\tpublic errno: ErrorCode;\n\tpublic code: string;\n\tpublic path?: string;\n\t// Unsupported.\n\tpublic syscall: string = '';\n\tpublic stack?: string;\n\n\t/**\n\t * Represents a BrowserFS error. Passed back to applications after a failed\n\t * call to the BrowserFS API.\n\t *\n\t * Error codes mirror those returned by regular Unix file operations, which is\n\t * what Node returns.\n\t * @constructor ApiError\n\t * @param type The type of the error.\n\t * @param [message] A descriptive error message.\n\t */\n\tconstructor(type: ErrorCode, message: string = ErrorStrings[type], path?: string) {\n\t\tsuper(message);\n\t\tthis.errno = type;\n\t\tthis.code = ErrorCode[type];\n\t\tthis.path = path;\n\t\tthis.message = `Error: ${this.code}: ${message}${this.path ? `, '${this.path}'` : ''}`;\n\t}\n\n\t/**\n\t * @return A friendly error message.\n\t */\n\tpublic toString(): string {\n\t\treturn this.message;\n\t}\n\n\tpublic toJSON(): any {\n\t\treturn {\n\t\t\terrno: this.errno,\n\t\t\tcode: this.code,\n\t\t\tpath: this.path,\n\t\t\tstack: this.stack,\n\t\t\tmessage: this.message,\n\t\t};\n\t}\n\n\t/**\n\t * Writes the API error into a buffer.\n\t */\n\tpublic writeToBuffer(buffer: Buffer = Buffer.alloc(this.bufferSize()), i: number = 0): Buffer {\n\t\tconst bytesWritten = buffer.write(JSON.stringify(this.toJSON()), i + 4);\n\t\tbuffer.writeUInt32LE(bytesWritten, i);\n\t\treturn buffer;\n\t}\n\n\t/**\n\t * The size of the API error in buffer-form in bytes.\n\t */\n\tpublic bufferSize(): number {\n\t\t// 4 bytes for string length.\n\t\treturn 4 + Buffer.byteLength(JSON.stringify(this.toJSON()));\n\t}\n}\n"]}