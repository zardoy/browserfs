{"version":3,"file":"FolderAdapter.js","sourceRoot":"","sources":["../../../src/backend/FolderAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseFileSystem, FileSystem, BFSCallback, FileSystemOptions } from '../core/file_system';\nimport * as path from 'path';\nimport { ApiError } from '../core/api_error';\nimport Cred from '../core/cred';\n\n/**\n * Configuration options for a FolderAdapter file system.\n */\nexport interface FolderAdapterOptions {\n\t// The folder to use as the root directory.\n\tfolder: string;\n\t// The file system to wrap.\n\twrapped: FileSystem;\n}\n\n/**\n * The FolderAdapter file system wraps a file system, and scopes all interactions to a subfolder of that file system.\n *\n * Example: Given a file system `foo` with folder `bar` and file `bar/baz`...\n *\n * ```javascript\n * BrowserFS.configure({\n *   fs: \"FolderAdapter\",\n *   options: {\n *     folder: \"bar\",\n *     wrapped: foo\n *   }\n * }, function(e) {\n *   var fs = BrowserFS.BFSRequire('fs');\n *   fs.readdirSync('/'); // ['baz']\n * });\n * ```\n */\nexport default class FolderAdapter extends BaseFileSystem implements FileSystem {\n\tpublic static readonly Name = 'FolderAdapter';\n\n\tpublic static readonly Options: FileSystemOptions = {\n\t\tfolder: {\n\t\t\ttype: 'string',\n\t\t\tdescription: 'The folder to use as the root directory',\n\t\t},\n\t\twrapped: {\n\t\t\ttype: 'object',\n\t\t\tdescription: 'The file system to wrap',\n\t\t},\n\t};\n\n\t/**\n\t * Creates a FolderAdapter instance with the given options.\n\t */\n\tpublic static Create(opts: FolderAdapterOptions, cb: BFSCallback<FolderAdapter>): void {\n\t\tconst fa = new FolderAdapter(opts.folder, opts.wrapped);\n\t\tfa._initialize(function (e?) {\n\t\t\tif (e) {\n\t\t\t\tcb(e);\n\t\t\t} else {\n\t\t\t\tcb(null, fa);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic static CreateAsync(opts: FolderAdapterOptions): Promise<FolderAdapter> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Create(opts, (error, fs) => {\n\t\t\t\tif (error || !fs) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(fs);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic static isAvailable(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic _wrapped: FileSystem;\n\tpublic _folder: string;\n\n\tprivate constructor(folder: string, wrapped: FileSystem) {\n\t\tsuper();\n\t\tthis._folder = folder;\n\t\tthis._wrapped = wrapped;\n\t}\n\n\tpublic getName(): string {\n\t\treturn this._wrapped.getName();\n\t}\n\tpublic isReadOnly(): boolean {\n\t\treturn this._wrapped.isReadOnly();\n\t}\n\tpublic supportsProps(): boolean {\n\t\treturn this._wrapped.supportsProps();\n\t}\n\tpublic supportsSynch(): boolean {\n\t\treturn this._wrapped.supportsSynch();\n\t}\n\tpublic supportsLinks(): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initialize the file system. Ensures that the wrapped file system\n\t * has the given folder.\n\t */\n\tprivate _initialize(cb: (e?: ApiError) => void) {\n\t\tthis._wrapped.exists(this._folder, Cred.Root, (exists: boolean) => {\n\t\t\tif (exists) {\n\t\t\t\tcb();\n\t\t\t} else if (this._wrapped.isReadOnly()) {\n\t\t\t\tcb(ApiError.ENOENT(this._folder));\n\t\t\t} else {\n\t\t\t\tthis._wrapped.mkdir(this._folder, 0x1ff, Cred.Root, cb);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @hidden\n */\nfunction translateError(folder: string, e: any): any {\n\tif (e !== null && typeof e === 'object') {\n\t\tconst err = <ApiError>e;\n\t\tlet p = err.path;\n\t\tif (p) {\n\t\t\tp = '/' + path.relative(folder, p);\n\t\t\terr.message = err.message.replace(err.path!, p);\n\t\t\terr.path = p;\n\t\t}\n\t}\n\treturn e;\n}\n\n/**\n * @hidden\n */\nfunction wrapCallback(folder: string, cb: any): any {\n\tif (typeof cb === 'function') {\n\t\treturn function (err: ApiError) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\targuments[0] = translateError(folder, err);\n\t\t\t}\n\t\t\t(<Function>cb).apply(null, arguments);\n\t\t};\n\t} else {\n\t\treturn cb;\n\t}\n}\n\n/**\n * @hidden\n */\nfunction wrapFunction(name: string, wrapFirst: boolean, wrapSecond: boolean): Function {\n\tif (name.slice(name.length - 4) !== 'Sync') {\n\t\t// Async function. Translate error in callback.\n\t\treturn function (this: FolderAdapter) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tif (wrapFirst) {\n\t\t\t\t\targuments[0] = path.join(this._folder, arguments[0]);\n\t\t\t\t}\n\t\t\t\tif (wrapSecond) {\n\t\t\t\t\targuments[1] = path.join(this._folder, arguments[1]);\n\t\t\t\t}\n\t\t\t\targuments[arguments.length - 1] = wrapCallback(this._folder, arguments[arguments.length - 1]);\n\t\t\t}\n\t\t\treturn (<any>this._wrapped)[name].apply(this._wrapped, arguments);\n\t\t};\n\t} else {\n\t\t// Sync function. Translate error in catch.\n\t\treturn function (this: FolderAdapter) {\n\t\t\ttry {\n\t\t\t\tif (wrapFirst) {\n\t\t\t\t\targuments[0] = path.join(this._folder, arguments[0]);\n\t\t\t\t}\n\t\t\t\tif (wrapSecond) {\n\t\t\t\t\targuments[1] = path.join(this._folder, arguments[1]);\n\t\t\t\t}\n\t\t\t\treturn (<any>this._wrapped)[name].apply(this._wrapped, arguments);\n\t\t\t} catch (e) {\n\t\t\t\tthrow translateError(this._folder, e);\n\t\t\t}\n\t\t};\n\t}\n}\n\n// First argument is a path.\n[\n\t'diskSpace',\n\t'stat',\n\t'statSync',\n\t'open',\n\t'openSync',\n\t'unlink',\n\t'unlinkSync',\n\t'rmdir',\n\t'rmdirSync',\n\t'mkdir',\n\t'mkdirSync',\n\t'readdir',\n\t'readdirSync',\n\t'exists',\n\t'existsSync',\n\t'realpath',\n\t'realpathSync',\n\t'truncate',\n\t'truncateSync',\n\t'readFile',\n\t'readFileSync',\n\t'writeFile',\n\t'writeFileSync',\n\t'appendFile',\n\t'appendFileSync',\n\t'chmod',\n\t'chmodSync',\n\t'chown',\n\t'chownSync',\n\t'utimes',\n\t'utimesSync',\n\t'readlink',\n\t'readlinkSync',\n].forEach((name: string) => {\n\t(<any>FolderAdapter.prototype)[name] = wrapFunction(name, true, false);\n});\n\n// First and second arguments are paths.\n['rename', 'renameSync', 'link', 'linkSync', 'symlink', 'symlinkSync'].forEach((name: string) => {\n\t(<any>FolderAdapter.prototype)[name] = wrapFunction(name, true, true);\n});\n"]}