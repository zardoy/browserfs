{"version":3,"file":"Emscripten.js","sourceRoot":"","sources":["../../../src/backend/Emscripten.ts"],"names":[],"mappings":"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","sourcesContent":["import { SynchronousFileSystem, BFSOneArgCallback, BFSCallback, BFSThreeArgCallback, FileSystemOptions } from '../core/file_system';\nimport { default as Stats, FileType } from '../core/stats';\nimport { FileFlag } from '../core/file_flag';\nimport { BaseFile, File } from '../core/file';\nimport { uint8Array2Buffer, buffer2Uint8array } from '../core/util';\nimport { ApiError, ErrorCode, ErrorStrings } from '../core/api_error';\nimport { EmscriptenFSNode } from '../generic/emscripten_fs';\nimport Cred from '../core/cred';\nimport { Buffer } from 'buffer';\n/**\n * @hidden\n */\ninterface EmscriptenError {\n\tnode: EmscriptenFSNode;\n\terrno: number;\n}\n\n/**\n * @hidden\n */\nfunction convertError(e: EmscriptenError, path: string = ''): ApiError {\n\tconst errno = e.errno;\n\tlet parent = e.node;\n\tconst paths: string[] = [];\n\twhile (parent) {\n\t\tpaths.unshift(parent.name);\n\t\tif (parent === parent.parent) {\n\t\t\tbreak;\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn new ApiError(errno, ErrorStrings[errno], paths.length > 0 ? '/' + paths.join('/') : path);\n}\n\nexport class EmscriptenFile extends BaseFile implements File {\n\tconstructor(private _fs: EmscriptenFileSystem, private _FS: any, private _path: string, private _stream: any) {\n\t\tsuper();\n\t}\n\tpublic getPos(): number | undefined {\n\t\treturn undefined;\n\t}\n\tpublic close(cb: BFSOneArgCallback): void {\n\t\tlet err: ApiError | null = null;\n\t\ttry {\n\t\t\tthis.closeSync();\n\t\t} catch (e) {\n\t\t\terr = e;\n\t\t} finally {\n\t\t\tcb(err);\n\t\t}\n\t}\n\tpublic closeSync(): void {\n\t\ttry {\n\t\t\tthis._FS.close(this._stream);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, this._path);\n\t\t}\n\t}\n\tpublic stat(cb: BFSCallback<Stats>): void {\n\t\ttry {\n\t\t\tcb(null, this.statSync());\n\t\t} catch (e) {\n\t\t\tcb(e);\n\t\t}\n\t}\n\tpublic statSync(): Stats {\n\t\ttry {\n\t\t\treturn this._fs.statSync(this._path, false, Cred.Root);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, this._path);\n\t\t}\n\t}\n\tpublic truncate(len: number, cb: BFSOneArgCallback): void {\n\t\tlet err: ApiError | null = null;\n\t\ttry {\n\t\t\tthis.truncateSync(len);\n\t\t} catch (e) {\n\t\t\terr = e;\n\t\t} finally {\n\t\t\tcb(err);\n\t\t}\n\t}\n\tpublic truncateSync(len: number): void {\n\t\ttry {\n\t\t\tthis._FS.ftruncate(this._stream.fd, len);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, this._path);\n\t\t}\n\t}\n\tpublic write(buffer: Buffer, offset: number, length: number, position: number, cb: BFSThreeArgCallback<number, Buffer>): void {\n\t\ttry {\n\t\t\tcb(null, this.writeSync(buffer, offset, length, position), buffer);\n\t\t} catch (e) {\n\t\t\tcb(e);\n\t\t}\n\t}\n\tpublic writeSync(buffer: Buffer, offset: number, length: number, position: number | null): number {\n\t\ttry {\n\t\t\tconst u8 = buffer2Uint8array(buffer);\n\t\t\t// Emscripten is particular about what position is set to.\n\t\t\tconst emPosition = position === null ? undefined : position;\n\t\t\treturn this._FS.write(this._stream, u8, offset, length, emPosition);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, this._path);\n\t\t}\n\t}\n\tpublic read(buffer: Buffer, offset: number, length: number, position: number, cb: BFSThreeArgCallback<number, Buffer>): void {\n\t\ttry {\n\t\t\tcb(null, this.readSync(buffer, offset, length, position), buffer);\n\t\t} catch (e) {\n\t\t\tcb(e);\n\t\t}\n\t}\n\tpublic readSync(buffer: Buffer, offset: number, length: number, position: number | null): number {\n\t\ttry {\n\t\t\tconst u8 = buffer2Uint8array(buffer);\n\t\t\t// Emscripten is particular about what position is set to.\n\t\t\tconst emPosition = position === null ? undefined : position;\n\t\t\treturn this._FS.read(this._stream, u8, offset, length, emPosition);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, this._path);\n\t\t}\n\t}\n\tpublic sync(cb: BFSOneArgCallback): void {\n\t\t// NOP.\n\t\tcb();\n\t}\n\tpublic syncSync(): void {\n\t\t// NOP.\n\t}\n\tpublic chown(uid: number, gid: number, cb: BFSOneArgCallback): void {\n\t\tlet err: ApiError | null = null;\n\t\ttry {\n\t\t\tthis.chownSync(uid, gid);\n\t\t} catch (e) {\n\t\t\terr = e;\n\t\t} finally {\n\t\t\tcb(err);\n\t\t}\n\t}\n\tpublic chownSync(uid: number, gid: number): void {\n\t\ttry {\n\t\t\tthis._FS.fchown(this._stream.fd, uid, gid);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, this._path);\n\t\t}\n\t}\n\tpublic chmod(mode: number, cb: BFSOneArgCallback): void {\n\t\tlet err: ApiError | null = null;\n\t\ttry {\n\t\t\tthis.chmodSync(mode);\n\t\t} catch (e) {\n\t\t\terr = e;\n\t\t} finally {\n\t\t\tcb(err);\n\t\t}\n\t}\n\tpublic chmodSync(mode: number): void {\n\t\ttry {\n\t\t\tthis._FS.fchmod(this._stream.fd, mode);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, this._path);\n\t\t}\n\t}\n\tpublic utimes(atime: Date, mtime: Date, cb: BFSOneArgCallback): void {\n\t\tlet err: ApiError | null = null;\n\t\ttry {\n\t\t\tthis.utimesSync(atime, mtime);\n\t\t} catch (e) {\n\t\t\terr = e;\n\t\t} finally {\n\t\t\tcb(err);\n\t\t}\n\t}\n\tpublic utimesSync(atime: Date, mtime: Date): void {\n\t\tthis._fs.utimesSync(this._path, atime, mtime, Cred.Root);\n\t}\n}\n\n/**\n * Configuration options for Emscripten file systems.\n */\nexport interface EmscriptenFileSystemOptions {\n\t// The Emscripten file system to use (`FS`)\n\tFS: any;\n}\n\n/**\n * Mounts an Emscripten file system into the BrowserFS file system.\n */\nexport default class EmscriptenFileSystem extends SynchronousFileSystem {\n\tpublic static readonly Name = 'EmscriptenFileSystem';\n\n\tpublic static readonly Options: FileSystemOptions = {\n\t\tFS: {\n\t\t\ttype: 'object',\n\t\t\tdescription: 'The Emscripten file system to use (the `FS` variable)',\n\t\t},\n\t};\n\n\t/**\n\t * Create an EmscriptenFileSystem instance with the given options.\n\t */\n\tpublic static Create(opts: EmscriptenFileSystemOptions, cb: BFSCallback<EmscriptenFileSystem>): void {\n\t\tcb(null, new EmscriptenFileSystem(opts.FS));\n\t}\n\n\tpublic static CreateAsync(opts: EmscriptenFileSystemOptions): Promise<EmscriptenFileSystem> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Create(opts, (error, fs) => {\n\t\t\t\tif (error || !fs) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(fs);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic static isAvailable(): boolean {\n\t\treturn true;\n\t}\n\n\tprivate _FS: any;\n\n\tprivate constructor(_FS: any) {\n\t\tsuper();\n\t\tthis._FS = _FS;\n\t}\n\tpublic getName(): string {\n\t\treturn this._FS.DB_NAME();\n\t}\n\tpublic isReadOnly(): boolean {\n\t\treturn false;\n\t}\n\tpublic supportsLinks(): boolean {\n\t\treturn true;\n\t}\n\tpublic supportsProps(): boolean {\n\t\treturn true;\n\t}\n\tpublic supportsSynch(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic renameSync(oldPath: string, newPath: string, cred: Cred): void {\n\t\ttry {\n\t\t\tthis._FS.rename(oldPath, newPath);\n\t\t} catch (e) {\n\t\t\tif (e.errno === ErrorCode.ENOENT) {\n\t\t\t\tthrow convertError(e, this.existsSync(oldPath, cred) ? newPath : oldPath);\n\t\t\t} else {\n\t\t\t\tthrow convertError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic statSync(p: string, isLstat: boolean, cred: Cred): Stats {\n\t\ttry {\n\t\t\tconst stats = isLstat ? this._FS.lstat(p) : this._FS.stat(p);\n\t\t\tconst itemType = this.modeToFileType(stats.mode);\n\t\t\treturn new Stats(itemType, stats.size, stats.mode, stats.atime.getTime(), stats.mtime.getTime(), stats.ctime.getTime());\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic openSync(p: string, flag: FileFlag, mode: number, cred: Cred): EmscriptenFile {\n\t\ttry {\n\t\t\tconst stream = this._FS.open(p, flag.getFlagString(), mode);\n\t\t\treturn new EmscriptenFile(this, this._FS, p, stream);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic unlinkSync(p: string, cred: Cred): void {\n\t\ttry {\n\t\t\tthis._FS.unlink(p);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic rmdirSync(p: string, cred: Cred): void {\n\t\ttry {\n\t\t\tthis._FS.rmdir(p);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic mkdirSync(p: string, mode: number, cred: Cred): void {\n\t\ttry {\n\t\t\tthis._FS.mkdir(p, mode);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic readdirSync(p: string, cred: Cred): string[] {\n\t\ttry {\n\t\t\t// Emscripten returns items for '.' and '..'. Node does not.\n\t\t\treturn this._FS.readdir(p).filter((p: string) => p !== '.' && p !== '..');\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic truncateSync(p: string, len: number, cred: Cred): void {\n\t\ttry {\n\t\t\tthis._FS.truncate(p, len);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic readFileSync(p: string, encoding: BufferEncoding, flag: FileFlag, cred: Cred): any {\n\t\ttry {\n\t\t\tconst data: Uint8Array = this._FS.readFile(p, { flags: flag.getFlagString() });\n\t\t\tconst buff = uint8Array2Buffer(data);\n\t\t\tif (encoding) {\n\t\t\t\treturn buff.toString(encoding);\n\t\t\t} else {\n\t\t\t\treturn buff;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic writeFileSync(p: string, data: any, encoding: BufferEncoding, flag: FileFlag, mode: number, cred: Cred): void {\n\t\ttry {\n\t\t\tif (encoding) {\n\t\t\t\tdata = Buffer.from(data, encoding);\n\t\t\t}\n\t\t\tconst u8 = buffer2Uint8array(data);\n\t\t\tthis._FS.writeFile(p, u8, { flags: flag.getFlagString(), encoding: 'binary' });\n\t\t\tthis._FS.chmod(p, mode);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic chmodSync(p: string, isLchmod: boolean, mode: number, cred: Cred) {\n\t\ttry {\n\t\t\tisLchmod ? this._FS.lchmod(p, mode) : this._FS.chmod(p, mode);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic chownSync(p: string, isLchown: boolean, new_uid: number, new_gid: number, cred: Cred): void {\n\t\ttry {\n\t\t\tisLchown ? this._FS.lchown(p, new_uid, new_gid) : this._FS.chown(p, new_uid, new_gid);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic symlinkSync(srcpath: string, dstpath: string, type: string, cred: Cred): void {\n\t\ttry {\n\t\t\tthis._FS.symlink(srcpath, dstpath);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e);\n\t\t}\n\t}\n\n\tpublic readlinkSync(p: string, cred: Cred): string {\n\t\ttry {\n\t\t\treturn this._FS.readlink(p);\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tpublic utimesSync(p: string, atime: Date, mtime: Date, cred: Cred): void {\n\t\ttry {\n\t\t\tthis._FS.utime(p, atime.getTime(), mtime.getTime());\n\t\t} catch (e) {\n\t\t\tthrow convertError(e, p);\n\t\t}\n\t}\n\n\tprivate modeToFileType(mode: number): FileType {\n\t\tif (this._FS.isDir(mode)) {\n\t\t\treturn FileType.DIRECTORY;\n\t\t} else if (this._FS.isFile(mode)) {\n\t\t\treturn FileType.FILE;\n\t\t} else if (this._FS.isLink(mode)) {\n\t\t\treturn FileType.SYMLINK;\n\t\t} else {\n\t\t\tthrow ApiError.EPERM(`Invalid mode: ${mode}`);\n\t\t}\n\t}\n}\n"]}