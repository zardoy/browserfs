{"version":3,"file":"LocalStorage.js","sourceRoot":"","sources":["../../../src/backend/LocalStorage.ts"],"names":[],"mappings":"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","sourcesContent":["import { BFSCallback, FileSystemOptions } from '../core/file_system';\nimport { SyncKeyValueStore, SimpleSyncStore, SyncKeyValueFileSystem, SimpleSyncRWTransaction, SyncKeyValueRWTransaction } from '../generic/key_value_filesystem';\nimport { ApiError, ErrorCode } from '../core/api_error';\nimport { Buffer } from 'buffer';\n\n/**\n * Some versions of FF and all versions of IE do not support the full range of\n * 16-bit numbers encoded as characters, as they enforce UTF-16 restrictions.\n * @url http://stackoverflow.com/questions/11170716/are-there-any-characters-that-are-not-allowed-in-localstorage/11173673#11173673\n * @hidden\n */\nlet supportsBinaryString: boolean = false,\n\tbinaryEncoding: BufferEncoding;\ntry {\n\tglobalThis.localStorage.setItem('__test__', String.fromCharCode(0xd800));\n\tsupportsBinaryString = globalThis.localStorage.getItem('__test__') === String.fromCharCode(0xd800);\n} catch (e) {\n\t// IE throws an exception.\n\tsupportsBinaryString = false;\n}\nbinaryEncoding = (supportsBinaryString ? 'binary_string' : 'binary_string_ie') as BufferEncoding;\nif (!Buffer.isEncoding(binaryEncoding)) {\n\t// Fallback for non BrowserFS implementations of buffer that lack a\n\t// binary_string format.\n\tbinaryEncoding = 'base64';\n}\n\n/**\n * A synchronous key-value store backed by localStorage.\n */\nexport class LocalStorageStore implements SyncKeyValueStore, SimpleSyncStore {\n\tpublic name(): string {\n\t\treturn LocalStorageFileSystem.Name;\n\t}\n\n\tpublic clear(): void {\n\t\tglobalThis.localStorage.clear();\n\t}\n\n\tpublic beginTransaction(type: string): SyncKeyValueRWTransaction {\n\t\t// No need to differentiate.\n\t\treturn new SimpleSyncRWTransaction(this);\n\t}\n\n\tpublic get(key: string): Buffer | undefined {\n\t\ttry {\n\t\t\tconst data = globalThis.localStorage.getItem(key);\n\t\t\tif (data !== null) {\n\t\t\t\treturn Buffer.from(data, binaryEncoding);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Do nothing.\n\t\t}\n\t\t// Key doesn't exist, or a failure occurred.\n\t\treturn undefined;\n\t}\n\n\tpublic put(key: string, data: Buffer, overwrite: boolean): boolean {\n\t\ttry {\n\t\t\tif (!overwrite && globalThis.localStorage.getItem(key) !== null) {\n\t\t\t\t// Don't want to overwrite the key!\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tglobalThis.localStorage.setItem(key, data.toString(binaryEncoding));\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\tthrow new ApiError(ErrorCode.ENOSPC, 'LocalStorage is full.');\n\t\t}\n\t}\n\n\tpublic del(key: string): void {\n\t\ttry {\n\t\t\tglobalThis.localStorage.removeItem(key);\n\t\t} catch (e) {\n\t\t\tthrow new ApiError(ErrorCode.EIO, 'Unable to delete key ' + key + ': ' + e);\n\t\t}\n\t}\n}\n\n/**\n * A synchronous file system backed by localStorage. Connects our\n * LocalStorageStore to our SyncKeyValueFileSystem.\n */\nexport default class LocalStorageFileSystem extends SyncKeyValueFileSystem {\n\tpublic static readonly Name = 'LocalStorage';\n\n\tpublic static readonly Options: FileSystemOptions = {};\n\n\t/**\n\t * Creates a LocalStorageFileSystem instance.\n\t */\n\tpublic static Create(options: any, cb: BFSCallback<LocalStorageFileSystem>): void {\n\t\tcb(null, new LocalStorageFileSystem());\n\t}\n\n\tpublic static CreateAsync(opts: any): Promise<LocalStorageFileSystem> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Create(opts, (error, fs) => {\n\t\t\t\tif (error || !fs) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(fs);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic static isAvailable(): boolean {\n\t\treturn typeof globalThis.localStorage !== 'undefined';\n\t}\n\t/**\n\t * Creates a new LocalStorage file system using the contents of `localStorage`.\n\t */\n\tprivate constructor() {\n\t\tsuper({ store: new LocalStorageStore() });\n\t}\n}\n"]}