{"version":3,"file":"IsoFS.js","sourceRoot":"","sources":["../../../src/backend/IsoFS.ts"],"names":[],"mappings":"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","sourcesContent":["import { ApiError, ErrorCode } from '../core/api_error';\nimport { default as Stats, FileType } from '../core/stats';\nimport { SynchronousFileSystem, FileSystem, BFSCallback, FileSystemOptions } from '../core/file_system';\nimport { File } from '../core/file';\nimport { FileFlag, ActionType } from '../core/file_flag';\nimport { NoSyncFile } from '../generic/preload_file';\nimport { copyingSlice, bufferValidator } from '../core/util';\nimport * as path from 'path';\nimport type { Buffer } from 'buffer';\n\n/**\n * @hidden\n */\nconst rockRidgeIdentifier = 'IEEE_P1282';\n/**\n * @hidden\n */\nconst enum VolumeDescriptorTypeCode {\n\tBootRecord = 0,\n\tPrimaryVolumeDescriptor = 1,\n\tSupplementaryVolumeDescriptor = 2,\n\tVolumePartitionDescriptor = 3,\n\tVolumeDescriptorSetTerminator = 255,\n}\n\n/**\n * @hidden\n */\ntype TGetString = (d: Buffer, i: number, len: number) => string;\n\n/**\n * @hidden\n */\nfunction getASCIIString(data: Buffer, startIndex: number, length: number) {\n\treturn data.toString('ascii', startIndex, startIndex + length).trim();\n}\n\n/**\n * @hidden\n */\nfunction getJolietString(data: Buffer, startIndex: number, length: number): string {\n\tif (length === 1) {\n\t\t// Special: Root, parent, current directory are still a single byte.\n\t\treturn String.fromCharCode(data[startIndex]);\n\t}\n\t// UTF16-BE, which isn't natively supported by NodeJS Buffers.\n\t// Length should be even, but pessimistically floor just in case.\n\tconst pairs = Math.floor(length / 2);\n\tconst chars = new Array(pairs);\n\tfor (let i = 0; i < pairs; i++) {\n\t\tconst pos = startIndex + (i << 1);\n\t\tchars[i] = String.fromCharCode(data[pos + 1] | (data[pos] << 8));\n\t}\n\treturn chars.join('');\n}\n\n/**\n * @hidden\n */\nfunction getDate(data: Buffer, startIndex: number): Date {\n\tconst year = parseInt(getASCIIString(data, startIndex, 4), 10);\n\tconst mon = parseInt(getASCIIString(data, startIndex + 4, 2), 10);\n\tconst day = parseInt(getASCIIString(data, startIndex + 6, 2), 10);\n\tconst hour = parseInt(getASCIIString(data, startIndex + 8, 2), 10);\n\tconst min = parseInt(getASCIIString(data, startIndex + 10, 2), 10);\n\tconst sec = parseInt(getASCIIString(data, startIndex + 12, 2), 10);\n\tconst hundrethsSec = parseInt(getASCIIString(data, startIndex + 14, 2), 10);\n\t// Last is a time-zone offset, but JavaScript dates don't support time zones well.\n\treturn new Date(year, mon, day, hour, min, sec, hundrethsSec * 100);\n}\n\n/**\n * @hidden\n */\nfunction getShortFormDate(data: Buffer, startIndex: number): Date {\n\tconst yearsSince1900 = data[startIndex];\n\tconst month = data[startIndex + 1];\n\tconst day = data[startIndex + 2];\n\tconst hour = data[startIndex + 3];\n\tconst minute = data[startIndex + 4];\n\tconst second = data[startIndex + 5];\n\t// JavaScript's Date support isn't so great; ignore timezone.\n\t// const offsetFromGMT = this._data[24];\n\treturn new Date(yearsSince1900, month - 1, day, hour, minute, second);\n}\n\n/**\n * @hidden\n */\nfunction constructSystemUseEntry(bigData: Buffer, i: number): SystemUseEntry {\n\tconst data = bigData.slice(i);\n\tconst sue = new SystemUseEntry(data);\n\tswitch (sue.signatureWord()) {\n\t\tcase SystemUseEntrySignatures.CE:\n\t\t\treturn new CEEntry(data);\n\t\tcase SystemUseEntrySignatures.PD:\n\t\t\treturn new PDEntry(data);\n\t\tcase SystemUseEntrySignatures.SP:\n\t\t\treturn new SPEntry(data);\n\t\tcase SystemUseEntrySignatures.ST:\n\t\t\treturn new STEntry(data);\n\t\tcase SystemUseEntrySignatures.ER:\n\t\t\treturn new EREntry(data);\n\t\tcase SystemUseEntrySignatures.ES:\n\t\t\treturn new ESEntry(data);\n\t\tcase SystemUseEntrySignatures.PX:\n\t\t\treturn new PXEntry(data);\n\t\tcase SystemUseEntrySignatures.PN:\n\t\t\treturn new PNEntry(data);\n\t\tcase SystemUseEntrySignatures.SL:\n\t\t\treturn new SLEntry(data);\n\t\tcase SystemUseEntrySignatures.NM:\n\t\t\treturn new NMEntry(data);\n\t\tcase SystemUseEntrySignatures.CL:\n\t\t\treturn new CLEntry(data);\n\t\tcase SystemUseEntrySignatures.PL:\n\t\t\treturn new PLEntry(data);\n\t\tcase SystemUseEntrySignatures.RE:\n\t\t\treturn new REEntry(data);\n\t\tcase SystemUseEntrySignatures.TF:\n\t\t\treturn new TFEntry(data);\n\t\tcase SystemUseEntrySignatures.SF:\n\t\t\treturn new SFEntry(data);\n\t\tcase SystemUseEntrySignatures.RR:\n\t\t\treturn new RREntry(data);\n\t\tdefault:\n\t\t\treturn sue;\n\t}\n}\n\n/**\n * @hidden\n */\nfunction constructSystemUseEntries(data: Buffer, i: number, len: number, isoData: Buffer): SystemUseEntry[] {\n\t// If the remaining allocated space following the last recorded System Use Entry in a System\n\t// Use field or Continuation Area is less than four bytes long, it cannot contain a System\n\t// Use Entry and shall be ignored\n\tlen = len - 4;\n\tlet entries = new Array<SystemUseEntry>();\n\twhile (i < len) {\n\t\tconst entry = constructSystemUseEntry(data, i);\n\t\tconst length = entry.length();\n\t\tif (length === 0) {\n\t\t\t// Invalid SU section; prevent infinite loop.\n\t\t\treturn entries;\n\t\t}\n\t\ti += length;\n\t\tif (entry instanceof STEntry) {\n\t\t\t// ST indicates the end of entries.\n\t\t\tbreak;\n\t\t}\n\t\tif (entry instanceof CEEntry) {\n\t\t\tentries = entries.concat(entry.getEntries(isoData));\n\t\t} else {\n\t\t\tentries.push(entry);\n\t\t}\n\t}\n\treturn entries;\n}\n\n/**\n * @hidden\n */\nclass VolumeDescriptor {\n\tprotected _data: Buffer;\n\tconstructor(data: Buffer) {\n\t\tthis._data = data;\n\t}\n\tpublic type(): VolumeDescriptorTypeCode {\n\t\treturn this._data[0];\n\t}\n\tpublic standardIdentifier(): string {\n\t\treturn getASCIIString(this._data, 1, 5);\n\t}\n\tpublic version(): number {\n\t\treturn this._data[6];\n\t}\n\tpublic data(): Buffer {\n\t\treturn this._data.slice(7, 2048);\n\t}\n}\n\n/**\n * @hidden\n */\nabstract class PrimaryOrSupplementaryVolumeDescriptor extends VolumeDescriptor {\n\tprivate _root: DirectoryRecord | null = null;\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic systemIdentifier(): string {\n\t\treturn this._getString32(8);\n\t}\n\tpublic volumeIdentifier(): string {\n\t\treturn this._getString32(40);\n\t}\n\tpublic volumeSpaceSize(): number {\n\t\treturn this._data.readUInt32LE(80);\n\t}\n\tpublic volumeSetSize(): number {\n\t\treturn this._data.readUInt16LE(120);\n\t}\n\tpublic volumeSequenceNumber(): number {\n\t\treturn this._data.readUInt16LE(124);\n\t}\n\tpublic logicalBlockSize(): number {\n\t\treturn this._data.readUInt16LE(128);\n\t}\n\tpublic pathTableSize(): number {\n\t\treturn this._data.readUInt32LE(132);\n\t}\n\tpublic locationOfTypeLPathTable(): number {\n\t\treturn this._data.readUInt32LE(140);\n\t}\n\tpublic locationOfOptionalTypeLPathTable(): number {\n\t\treturn this._data.readUInt32LE(144);\n\t}\n\tpublic locationOfTypeMPathTable(): number {\n\t\treturn this._data.readUInt32BE(148);\n\t}\n\tpublic locationOfOptionalTypeMPathTable(): number {\n\t\treturn this._data.readUInt32BE(152);\n\t}\n\tpublic rootDirectoryEntry(isoData: Buffer): DirectoryRecord {\n\t\tif (this._root === null) {\n\t\t\tthis._root = this._constructRootDirectoryRecord(this._data.slice(156));\n\t\t\tthis._root.rootCheckForRockRidge(isoData);\n\t\t}\n\t\treturn this._root;\n\t}\n\tpublic volumeSetIdentifier(): string {\n\t\treturn this._getString(190, 128);\n\t}\n\tpublic publisherIdentifier(): string {\n\t\treturn this._getString(318, 128);\n\t}\n\tpublic dataPreparerIdentifier(): string {\n\t\treturn this._getString(446, 128);\n\t}\n\tpublic applicationIdentifier(): string {\n\t\treturn this._getString(574, 128);\n\t}\n\tpublic copyrightFileIdentifier(): string {\n\t\treturn this._getString(702, 38);\n\t}\n\tpublic abstractFileIdentifier(): string {\n\t\treturn this._getString(740, 36);\n\t}\n\tpublic bibliographicFileIdentifier(): string {\n\t\treturn this._getString(776, 37);\n\t}\n\tpublic volumeCreationDate(): Date {\n\t\treturn getDate(this._data, 813);\n\t}\n\tpublic volumeModificationDate(): Date {\n\t\treturn getDate(this._data, 830);\n\t}\n\tpublic volumeExpirationDate(): Date {\n\t\treturn getDate(this._data, 847);\n\t}\n\tpublic volumeEffectiveDate(): Date {\n\t\treturn getDate(this._data, 864);\n\t}\n\tpublic fileStructureVersion(): number {\n\t\treturn this._data[881];\n\t}\n\tpublic applicationUsed(): Buffer {\n\t\treturn this._data.slice(883, 883 + 512);\n\t}\n\tpublic reserved(): Buffer {\n\t\treturn this._data.slice(1395, 1395 + 653);\n\t}\n\tpublic abstract name(): string;\n\tprotected abstract _constructRootDirectoryRecord(data: Buffer): DirectoryRecord;\n\tprotected abstract _getString(idx: number, len: number): string;\n\tprotected _getString32(idx: number): string {\n\t\treturn this._getString(idx, 32);\n\t}\n}\n\n/**\n * @hidden\n */\nclass PrimaryVolumeDescriptor extends PrimaryOrSupplementaryVolumeDescriptor {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t\tif (this.type() !== VolumeDescriptorTypeCode.PrimaryVolumeDescriptor) {\n\t\t\tthrow new ApiError(ErrorCode.EIO, `Invalid primary volume descriptor.`);\n\t\t}\n\t}\n\tpublic name() {\n\t\treturn 'ISO9660';\n\t}\n\tprotected _constructRootDirectoryRecord(data: Buffer): DirectoryRecord {\n\t\treturn new ISODirectoryRecord(data, -1);\n\t}\n\tprotected _getString(idx: number, len: number): string {\n\t\treturn this._getString(idx, len);\n\t}\n}\n\n/**\n * @hidden\n */\nclass SupplementaryVolumeDescriptor extends PrimaryOrSupplementaryVolumeDescriptor {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t\tif (this.type() !== VolumeDescriptorTypeCode.SupplementaryVolumeDescriptor) {\n\t\t\tthrow new ApiError(ErrorCode.EIO, `Invalid supplementary volume descriptor.`);\n\t\t}\n\t\tconst escapeSequence = this.escapeSequence();\n\t\tconst third = escapeSequence[2];\n\t\t// Third character identifies what 'level' of the UCS specification to follow.\n\t\t// We ignore it.\n\t\tif (escapeSequence[0] !== 0x25 || escapeSequence[1] !== 0x2f || (third !== 0x40 && third !== 0x43 && third !== 0x45)) {\n\t\t\tthrow new ApiError(ErrorCode.EIO, `Unrecognized escape sequence for SupplementaryVolumeDescriptor: ${escapeSequence.toString()}`);\n\t\t}\n\t}\n\tpublic name() {\n\t\treturn 'Joliet';\n\t}\n\tpublic escapeSequence(): Buffer {\n\t\treturn this._data.slice(88, 120);\n\t}\n\tprotected _constructRootDirectoryRecord(data: Buffer): DirectoryRecord {\n\t\treturn new JolietDirectoryRecord(data, -1);\n\t}\n\tprotected _getString(idx: number, len: number): string {\n\t\treturn getJolietString(this._data, idx, len);\n\t}\n}\n\n/**\n * @hidden\n */\nconst enum FileFlags {\n\tHidden = 1,\n\tDirectory = 1 << 1,\n\tAssociatedFile = 1 << 2,\n\tEARContainsInfo = 1 << 3,\n\tEARContainsPerms = 1 << 4,\n\tFinalDirectoryRecordForFile = 1 << 5,\n}\n\n/**\n * @hidden\n */\nabstract class DirectoryRecord {\n\tprotected _data: Buffer;\n\t// Offset at which system use entries begin. Set to -1 if not enabled.\n\tprotected _rockRidgeOffset: number;\n\tprotected _suEntries: SystemUseEntry[] | null = null;\n\tprivate _fileOrDir: Buffer | Directory<DirectoryRecord> | null = null;\n\tconstructor(data: Buffer, rockRidgeOffset: number) {\n\t\tthis._data = data;\n\t\tthis._rockRidgeOffset = rockRidgeOffset;\n\t}\n\tpublic hasRockRidge(): boolean {\n\t\treturn this._rockRidgeOffset > -1;\n\t}\n\tpublic getRockRidgeOffset(): number {\n\t\treturn this._rockRidgeOffset;\n\t}\n\t/**\n\t * !!ONLY VALID ON ROOT NODE!!\n\t * Checks if Rock Ridge is enabled, and sets the offset.\n\t */\n\tpublic rootCheckForRockRidge(isoData: Buffer): void {\n\t\tconst dir = this.getDirectory(isoData);\n\t\tthis._rockRidgeOffset = dir.getDotEntry(isoData)._getRockRidgeOffset(isoData);\n\t\tif (this._rockRidgeOffset > -1) {\n\t\t\t// Wipe out directory. Start over with RR knowledge.\n\t\t\tthis._fileOrDir = null;\n\t\t}\n\t}\n\tpublic length(): number {\n\t\treturn this._data[0];\n\t}\n\tpublic extendedAttributeRecordLength(): number {\n\t\treturn this._data[1];\n\t}\n\tpublic lba(): number {\n\t\treturn this._data.readUInt32LE(2) * 2048;\n\t}\n\tpublic dataLength(): number {\n\t\treturn this._data.readUInt32LE(10);\n\t}\n\tpublic recordingDate(): Date {\n\t\treturn getShortFormDate(this._data, 18);\n\t}\n\tpublic fileFlags(): number {\n\t\treturn this._data[25];\n\t}\n\tpublic fileUnitSize(): number {\n\t\treturn this._data[26];\n\t}\n\tpublic interleaveGapSize(): number {\n\t\treturn this._data[27];\n\t}\n\tpublic volumeSequenceNumber(): number {\n\t\treturn this._data.readUInt16LE(28);\n\t}\n\tpublic identifier(): string {\n\t\treturn this._getString(33, this._data[32]);\n\t}\n\tpublic fileName(isoData: Buffer): string {\n\t\tif (this.hasRockRidge()) {\n\t\t\tconst fn = this._rockRidgeFilename(isoData);\n\t\t\tif (fn !== null) {\n\t\t\t\treturn fn;\n\t\t\t}\n\t\t}\n\t\tconst ident = this.identifier();\n\t\tif (this.isDirectory(isoData)) {\n\t\t\treturn ident;\n\t\t}\n\t\t// Files:\n\t\t// - MUST have 0x2E (.) separating the name from the extension\n\t\t// - MUST have 0x3B (;) separating the file name and extension from the version\n\t\t// Gets expanded to two-byte char in Unicode directory records.\n\t\tconst versionSeparator = ident.indexOf(';');\n\t\tif (versionSeparator === -1) {\n\t\t\t// Some Joliet filenames lack the version separator, despite the standard\n\t\t\t// specifying that it should be there.\n\t\t\treturn ident;\n\t\t} else if (ident[versionSeparator - 1] === '.') {\n\t\t\t// Empty extension. Do not include '.' in the filename.\n\t\t\treturn ident.slice(0, versionSeparator - 1);\n\t\t} else {\n\t\t\t// Include up to version separator.\n\t\t\treturn ident.slice(0, versionSeparator);\n\t\t}\n\t}\n\tpublic isDirectory(isoData: Buffer): boolean {\n\t\tlet rv = !!(this.fileFlags() & FileFlags.Directory);\n\t\t// If it lacks the Directory flag, it may still be a directory if we've exceeded the directory\n\t\t// depth limit. Rock Ridge marks these as files and adds a special attribute.\n\t\tif (!rv && this.hasRockRidge()) {\n\t\t\trv = this.getSUEntries(isoData).filter(e => e instanceof CLEntry).length > 0;\n\t\t}\n\t\treturn rv;\n\t}\n\tpublic isSymlink(isoData: Buffer): boolean {\n\t\treturn this.hasRockRidge() && this.getSUEntries(isoData).filter(e => e instanceof SLEntry).length > 0;\n\t}\n\tpublic getSymlinkPath(isoData: Buffer): string {\n\t\tlet p = '';\n\t\tconst entries = this.getSUEntries(isoData);\n\t\tconst getStr = this._getGetString();\n\t\tfor (const entry of entries) {\n\t\t\tif (entry instanceof SLEntry) {\n\t\t\t\tconst components = entry.componentRecords();\n\t\t\t\tfor (const component of components) {\n\t\t\t\t\tconst flags = component.flags();\n\t\t\t\t\tif (flags & SLComponentFlags.CURRENT) {\n\t\t\t\t\t\tp += './';\n\t\t\t\t\t} else if (flags & SLComponentFlags.PARENT) {\n\t\t\t\t\t\tp += '../';\n\t\t\t\t\t} else if (flags & SLComponentFlags.ROOT) {\n\t\t\t\t\t\tp += '/';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp += component.content(getStr);\n\t\t\t\t\t\tif (!(flags & SLComponentFlags.CONTINUE)) {\n\t\t\t\t\t\t\tp += '/';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!entry.continueFlag()) {\n\t\t\t\t\t// We are done with this link.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (p.length > 1 && p[p.length - 1] === '/') {\n\t\t\t// Trim trailing '/'.\n\t\t\treturn p.slice(0, p.length - 1);\n\t\t} else {\n\t\t\treturn p;\n\t\t}\n\t}\n\tpublic getFile(isoData: Buffer): Buffer {\n\t\tif (this.isDirectory(isoData)) {\n\t\t\tthrow new Error(`Tried to get a File from a directory.`);\n\t\t}\n\t\tif (this._fileOrDir === null) {\n\t\t\tthis._fileOrDir = isoData.slice(this.lba(), this.lba() + this.dataLength());\n\t\t}\n\t\treturn <Buffer>this._fileOrDir;\n\t}\n\tpublic getDirectory(isoData: Buffer): Directory<DirectoryRecord> {\n\t\tif (!this.isDirectory(isoData)) {\n\t\t\tthrow new Error(`Tried to get a Directory from a file.`);\n\t\t}\n\t\tif (this._fileOrDir === null) {\n\t\t\tthis._fileOrDir = this._constructDirectory(isoData);\n\t\t}\n\t\treturn <Directory<this>>this._fileOrDir;\n\t}\n\tpublic getSUEntries(isoData: Buffer): SystemUseEntry[] {\n\t\tif (!this._suEntries) {\n\t\t\tthis._constructSUEntries(isoData);\n\t\t}\n\t\treturn this._suEntries!;\n\t}\n\tprotected abstract _getString(i: number, len: number): string;\n\tprotected abstract _getGetString(): TGetString;\n\tprotected abstract _constructDirectory(isoData: Buffer): Directory<DirectoryRecord>;\n\tprotected _rockRidgeFilename(isoData: Buffer): string | null {\n\t\tconst nmEntries = <NMEntry[]>this.getSUEntries(isoData).filter(e => e instanceof NMEntry);\n\t\tif (nmEntries.length === 0 || nmEntries[0].flags() & (NMFlags.CURRENT | NMFlags.PARENT)) {\n\t\t\treturn null;\n\t\t}\n\t\tlet str = '';\n\t\tconst getString = this._getGetString();\n\t\tfor (const e of nmEntries) {\n\t\t\tstr += e.name(getString);\n\t\t\tif (!(e.flags() & NMFlags.CONTINUE)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn str;\n\t}\n\tprivate _constructSUEntries(isoData: Buffer): void {\n\t\tlet i = 33 + this._data[32];\n\t\tif (i % 2 === 1) {\n\t\t\t// Skip padding field.\n\t\t\ti++;\n\t\t}\n\t\ti += this._rockRidgeOffset;\n\t\tthis._suEntries = constructSystemUseEntries(this._data, i, this.length(), isoData);\n\t}\n\t/**\n\t * !!ONLY VALID ON FIRST ENTRY OF ROOT DIRECTORY!!\n\t * Returns -1 if rock ridge is not enabled. Otherwise, returns the offset\n\t * at which system use fields begin.\n\t */\n\tprivate _getRockRidgeOffset(isoData: Buffer): number {\n\t\t// In the worst case, we get some garbage SU entries.\n\t\t// Fudge offset to 0 before proceeding.\n\t\tthis._rockRidgeOffset = 0;\n\t\tconst suEntries = this.getSUEntries(isoData);\n\t\tif (suEntries.length > 0) {\n\t\t\tconst spEntry = suEntries[0];\n\t\t\tif (spEntry instanceof SPEntry && spEntry.checkBytesPass()) {\n\t\t\t\t// SUSP is in use.\n\t\t\t\tfor (let i = 1; i < suEntries.length; i++) {\n\t\t\t\t\tconst entry = suEntries[i];\n\t\t\t\t\tif (entry instanceof RREntry || (entry instanceof EREntry && entry.extensionIdentifier() === rockRidgeIdentifier)) {\n\t\t\t\t\t\t// Rock Ridge is in use!\n\t\t\t\t\t\treturn spEntry.bytesSkipped();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Failed.\n\t\tthis._rockRidgeOffset = -1;\n\t\treturn -1;\n\t}\n}\n\n/**\n * @hidden\n */\nclass ISODirectoryRecord extends DirectoryRecord {\n\tconstructor(data: Buffer, rockRidgeOffset: number) {\n\t\tsuper(data, rockRidgeOffset);\n\t}\n\tprotected _getString(i: number, len: number): string {\n\t\treturn getASCIIString(this._data, i, len);\n\t}\n\tprotected _constructDirectory(isoData: Buffer): Directory<DirectoryRecord> {\n\t\treturn new ISODirectory(this, isoData);\n\t}\n\tprotected _getGetString(): TGetString {\n\t\treturn getASCIIString;\n\t}\n}\n\n/**\n * @hidden\n */\nclass JolietDirectoryRecord extends DirectoryRecord {\n\tconstructor(data: Buffer, rockRidgeOffset: number) {\n\t\tsuper(data, rockRidgeOffset);\n\t}\n\tprotected _getString(i: number, len: number): string {\n\t\treturn getJolietString(this._data, i, len);\n\t}\n\tprotected _constructDirectory(isoData: Buffer): Directory<DirectoryRecord> {\n\t\treturn new JolietDirectory(this, isoData);\n\t}\n\tprotected _getGetString(): TGetString {\n\t\treturn getJolietString;\n\t}\n}\n\n/**\n * @hidden\n */\nconst enum SystemUseEntrySignatures {\n\tCE = 0x4345,\n\tPD = 0x5044,\n\tSP = 0x5350,\n\tST = 0x5354,\n\tER = 0x4552,\n\tES = 0x4553,\n\tPX = 0x5058,\n\tPN = 0x504e,\n\tSL = 0x534c,\n\tNM = 0x4e4d,\n\tCL = 0x434c,\n\tPL = 0x504c,\n\tRE = 0x5245,\n\tTF = 0x5446,\n\tSF = 0x5346,\n\tRR = 0x5252,\n}\n\n/**\n * @hidden\n */\nclass SystemUseEntry {\n\tprotected _data: Buffer;\n\tconstructor(data: Buffer) {\n\t\tthis._data = data;\n\t}\n\tpublic signatureWord(): SystemUseEntrySignatures {\n\t\treturn this._data.readUInt16BE(0);\n\t}\n\tpublic signatureWordString(): string {\n\t\treturn getASCIIString(this._data, 0, 2);\n\t}\n\tpublic length(): number {\n\t\treturn this._data[2];\n\t}\n\tpublic suVersion(): number {\n\t\treturn this._data[3];\n\t}\n}\n\n/**\n * Continuation entry.\n * @hidden\n */\nclass CEEntry extends SystemUseEntry {\n\tprivate _entries: SystemUseEntry[] | null = null;\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\t/**\n\t * Logical block address of the continuation area.\n\t */\n\tpublic continuationLba(): number {\n\t\treturn this._data.readUInt32LE(4);\n\t}\n\t/**\n\t * Offset into the logical block.\n\t */\n\tpublic continuationLbaOffset(): number {\n\t\treturn this._data.readUInt32LE(12);\n\t}\n\t/**\n\t * Length of the continuation area.\n\t */\n\tpublic continuationLength(): number {\n\t\treturn this._data.readUInt32LE(20);\n\t}\n\tpublic getEntries(isoData: Buffer): SystemUseEntry[] {\n\t\tif (!this._entries) {\n\t\t\tconst start = this.continuationLba() * 2048 + this.continuationLbaOffset();\n\t\t\tthis._entries = constructSystemUseEntries(isoData, start, this.continuationLength(), isoData);\n\t\t}\n\t\treturn this._entries;\n\t}\n}\n\n/**\n * Padding entry.\n * @hidden\n */\nclass PDEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n}\n\n/**\n * Identifies that SUSP is in-use.\n * @hidden\n */\nclass SPEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic checkBytesPass(): boolean {\n\t\treturn this._data[4] === 0xbe && this._data[5] === 0xef;\n\t}\n\tpublic bytesSkipped(): number {\n\t\treturn this._data[6];\n\t}\n}\n\n/**\n * Identifies the end of the SUSP entries.\n * @hidden\n */\nclass STEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n}\n\n/**\n * Specifies system-specific extensions to SUSP.\n * @hidden\n */\nclass EREntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic identifierLength(): number {\n\t\treturn this._data[4];\n\t}\n\tpublic descriptorLength(): number {\n\t\treturn this._data[5];\n\t}\n\tpublic sourceLength(): number {\n\t\treturn this._data[6];\n\t}\n\tpublic extensionVersion(): number {\n\t\treturn this._data[7];\n\t}\n\tpublic extensionIdentifier(): string {\n\t\treturn getASCIIString(this._data, 8, this.identifierLength());\n\t}\n\tpublic extensionDescriptor(): string {\n\t\treturn getASCIIString(this._data, 8 + this.identifierLength(), this.descriptorLength());\n\t}\n\tpublic extensionSource(): string {\n\t\treturn getASCIIString(this._data, 8 + this.identifierLength() + this.descriptorLength(), this.sourceLength());\n\t}\n}\n\n/**\n * @hidden\n */\nclass ESEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic extensionSequence(): number {\n\t\treturn this._data[4];\n\t}\n}\n\n/**\n * RockRidge: Marks that RockRidge is in use [deprecated]\n * @hidden\n */\nclass RREntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n}\n\n/**\n * RockRidge: Records POSIX file attributes.\n * @hidden\n */\nclass PXEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic mode(): number {\n\t\treturn this._data.readUInt32LE(4);\n\t}\n\tpublic fileLinks(): number {\n\t\treturn this._data.readUInt32LE(12);\n\t}\n\tpublic uid(): number {\n\t\treturn this._data.readUInt32LE(20);\n\t}\n\tpublic gid(): number {\n\t\treturn this._data.readUInt32LE(28);\n\t}\n\tpublic inode(): number {\n\t\treturn this._data.readUInt32LE(36);\n\t}\n}\n\n/**\n * RockRidge: Records POSIX device number.\n * @hidden\n */\nclass PNEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic devTHigh(): number {\n\t\treturn this._data.readUInt32LE(4);\n\t}\n\tpublic devTLow(): number {\n\t\treturn this._data.readUInt32LE(12);\n\t}\n}\n\n/**\n * RockRidge: Records symbolic link\n * @hidden\n */\nclass SLEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic flags(): number {\n\t\treturn this._data[4];\n\t}\n\tpublic continueFlag(): number {\n\t\treturn this.flags() & 0x1;\n\t}\n\tpublic componentRecords(): SLComponentRecord[] {\n\t\tconst records = new Array<SLComponentRecord>();\n\t\tlet i = 5;\n\t\twhile (i < this.length()) {\n\t\t\tconst record = new SLComponentRecord(this._data.slice(i));\n\t\t\trecords.push(record);\n\t\t\ti += record.length();\n\t\t}\n\t\treturn records;\n\t}\n}\n\n/**\n * @hidden\n */\nconst enum SLComponentFlags {\n\tCONTINUE = 1,\n\tCURRENT = 1 << 1,\n\tPARENT = 1 << 2,\n\tROOT = 1 << 3,\n}\n\n/**\n * @hidden\n */\nclass SLComponentRecord {\n\tprivate _data: Buffer;\n\tconstructor(data: Buffer) {\n\t\tthis._data = data;\n\t}\n\tpublic flags(): SLComponentFlags {\n\t\treturn this._data[0];\n\t}\n\tpublic length(): number {\n\t\treturn 2 + this.componentLength();\n\t}\n\tpublic componentLength(): number {\n\t\treturn this._data[1];\n\t}\n\tpublic content(getString: TGetString): string {\n\t\treturn getString(this._data, 2, this.componentLength());\n\t}\n}\n\n/**\n * @hidden\n */\nconst enum NMFlags {\n\tCONTINUE = 1,\n\tCURRENT = 1 << 1,\n\tPARENT = 1 << 2,\n}\n\n/**\n * RockRidge: Records alternate file name\n * @hidden\n */\nclass NMEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic flags(): NMFlags {\n\t\treturn this._data[4];\n\t}\n\tpublic name(getString: TGetString): string {\n\t\treturn getString(this._data, 5, this.length() - 5);\n\t}\n}\n\n/**\n * RockRidge: Records child link\n * @hidden\n */\nclass CLEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic childDirectoryLba(): number {\n\t\treturn this._data.readUInt32LE(4);\n\t}\n}\n\n/**\n * RockRidge: Records parent link.\n * @hidden\n */\nclass PLEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic parentDirectoryLba(): number {\n\t\treturn this._data.readUInt32LE(4);\n\t}\n}\n\n/**\n * RockRidge: Records relocated directory.\n * @hidden\n */\nclass REEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n}\n\n/**\n * @hidden\n */\nconst enum TFFlags {\n\tCREATION = 1,\n\tMODIFY = 1 << 1,\n\tACCESS = 1 << 2,\n\tATTRIBUTES = 1 << 3,\n\tBACKUP = 1 << 4,\n\tEXPIRATION = 1 << 5,\n\tEFFECTIVE = 1 << 6,\n\tLONG_FORM = 1 << 7,\n}\n\n/**\n * RockRidge: Records file timestamps\n * @hidden\n */\nclass TFEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic flags(): number {\n\t\treturn this._data[4];\n\t}\n\tpublic creation(): Date | null {\n\t\tif (this.flags() & TFFlags.CREATION) {\n\t\t\tif (this._longFormDates()) {\n\t\t\t\treturn getDate(this._data, 5);\n\t\t\t} else {\n\t\t\t\treturn getShortFormDate(this._data, 5);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tpublic modify(): Date | null {\n\t\tif (this.flags() & TFFlags.MODIFY) {\n\t\t\tconst previousDates = this.flags() & TFFlags.CREATION ? 1 : 0;\n\t\t\tif (this._longFormDates()) {\n\t\t\t\treturn getDate(this._data, 5 + previousDates * 17);\n\t\t\t} else {\n\t\t\t\treturn getShortFormDate(this._data, 5 + previousDates * 7);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tpublic access(): Date | null {\n\t\tif (this.flags() & TFFlags.ACCESS) {\n\t\t\tlet previousDates = this.flags() & TFFlags.CREATION ? 1 : 0;\n\t\t\tpreviousDates += this.flags() & TFFlags.MODIFY ? 1 : 0;\n\t\t\tif (this._longFormDates()) {\n\t\t\t\treturn getDate(this._data, 5 + previousDates * 17);\n\t\t\t} else {\n\t\t\t\treturn getShortFormDate(this._data, 5 + previousDates * 7);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tpublic backup(): Date | null {\n\t\tif (this.flags() & TFFlags.BACKUP) {\n\t\t\tlet previousDates = this.flags() & TFFlags.CREATION ? 1 : 0;\n\t\t\tpreviousDates += this.flags() & TFFlags.MODIFY ? 1 : 0;\n\t\t\tpreviousDates += this.flags() & TFFlags.ACCESS ? 1 : 0;\n\t\t\tif (this._longFormDates()) {\n\t\t\t\treturn getDate(this._data, 5 + previousDates * 17);\n\t\t\t} else {\n\t\t\t\treturn getShortFormDate(this._data, 5 + previousDates * 7);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tpublic expiration(): Date | null {\n\t\tif (this.flags() & TFFlags.EXPIRATION) {\n\t\t\tlet previousDates = this.flags() & TFFlags.CREATION ? 1 : 0;\n\t\t\tpreviousDates += this.flags() & TFFlags.MODIFY ? 1 : 0;\n\t\t\tpreviousDates += this.flags() & TFFlags.ACCESS ? 1 : 0;\n\t\t\tpreviousDates += this.flags() & TFFlags.BACKUP ? 1 : 0;\n\t\t\tif (this._longFormDates()) {\n\t\t\t\treturn getDate(this._data, 5 + previousDates * 17);\n\t\t\t} else {\n\t\t\t\treturn getShortFormDate(this._data, 5 + previousDates * 7);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tpublic effective(): Date | null {\n\t\tif (this.flags() & TFFlags.EFFECTIVE) {\n\t\t\tlet previousDates = this.flags() & TFFlags.CREATION ? 1 : 0;\n\t\t\tpreviousDates += this.flags() & TFFlags.MODIFY ? 1 : 0;\n\t\t\tpreviousDates += this.flags() & TFFlags.ACCESS ? 1 : 0;\n\t\t\tpreviousDates += this.flags() & TFFlags.BACKUP ? 1 : 0;\n\t\t\tpreviousDates += this.flags() & TFFlags.EXPIRATION ? 1 : 0;\n\t\t\tif (this._longFormDates()) {\n\t\t\t\treturn getDate(this._data, 5 + previousDates * 17);\n\t\t\t} else {\n\t\t\t\treturn getShortFormDate(this._data, 5 + previousDates * 7);\n\t\t\t}\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tprivate _longFormDates(): boolean {\n\t\treturn !!(this.flags() && TFFlags.LONG_FORM);\n\t}\n}\n\n/**\n * RockRidge: File data in sparse format.\n * @hidden\n */\nclass SFEntry extends SystemUseEntry {\n\tconstructor(data: Buffer) {\n\t\tsuper(data);\n\t}\n\tpublic virtualSizeHigh(): number {\n\t\treturn this._data.readUInt32LE(4);\n\t}\n\tpublic virtualSizeLow(): number {\n\t\treturn this._data.readUInt32LE(12);\n\t}\n\tpublic tableDepth(): number {\n\t\treturn this._data[20];\n\t}\n}\n\n/**\n * @hidden\n */\nabstract class Directory<T extends DirectoryRecord> {\n\tprotected _record: T;\n\tprivate _fileList: string[] = [];\n\tprivate _fileMap: { [name: string]: T } = {};\n\tconstructor(record: T, isoData: Buffer) {\n\t\tthis._record = record;\n\t\tlet i = record.lba();\n\t\tlet iLimit = i + record.dataLength();\n\t\tif (!(record.fileFlags() & FileFlags.Directory)) {\n\t\t\t// Must have a CL entry.\n\t\t\tconst cl = <CLEntry>record.getSUEntries(isoData).filter(e => e instanceof CLEntry)[0];\n\t\t\ti = cl.childDirectoryLba() * 2048;\n\t\t\tiLimit = Infinity;\n\t\t}\n\n\t\twhile (i < iLimit) {\n\t\t\tconst len = isoData[i];\n\t\t\t// Zero-padding between sectors.\n\t\t\t// TODO: Could optimize this to seek to nearest-sector upon\n\t\t\t// seeing a 0.\n\t\t\tif (len === 0) {\n\t\t\t\ti++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst r = this._constructDirectoryRecord(isoData.slice(i));\n\t\t\tconst fname = r.fileName(isoData);\n\t\t\t// Skip '.' and '..' entries.\n\t\t\tif (fname !== '\\u0000' && fname !== '\\u0001') {\n\t\t\t\t// Skip relocated entries.\n\t\t\t\tif (!r.hasRockRidge() || r.getSUEntries(isoData).filter(e => e instanceof REEntry).length === 0) {\n\t\t\t\t\tthis._fileMap[fname] = r;\n\t\t\t\t\tthis._fileList.push(fname);\n\t\t\t\t}\n\t\t\t} else if (iLimit === Infinity) {\n\t\t\t\t// First entry contains needed data.\n\t\t\t\tiLimit = i + r.dataLength();\n\t\t\t}\n\t\t\ti += r.length();\n\t\t}\n\t}\n\t/**\n\t * Get the record with the given name.\n\t * Returns undefined if not present.\n\t */\n\tpublic getRecord(name: string): DirectoryRecord {\n\t\treturn this._fileMap[name];\n\t}\n\tpublic getFileList(): string[] {\n\t\treturn this._fileList;\n\t}\n\tpublic getDotEntry(isoData: Buffer): T {\n\t\treturn this._constructDirectoryRecord(isoData.slice(this._record.lba()));\n\t}\n\tprotected abstract _constructDirectoryRecord(data: Buffer): T;\n}\n\n/**\n * @hidden\n */\nclass ISODirectory extends Directory<ISODirectoryRecord> {\n\tconstructor(record: ISODirectoryRecord, isoData: Buffer) {\n\t\tsuper(record, isoData);\n\t}\n\tprotected _constructDirectoryRecord(data: Buffer): ISODirectoryRecord {\n\t\treturn new ISODirectoryRecord(data, this._record.getRockRidgeOffset());\n\t}\n}\n\n/**\n * @hidden\n */\nclass JolietDirectory extends Directory<JolietDirectoryRecord> {\n\tconstructor(record: JolietDirectoryRecord, isoData: Buffer) {\n\t\tsuper(record, isoData);\n\t}\n\tprotected _constructDirectoryRecord(data: Buffer): JolietDirectoryRecord {\n\t\treturn new JolietDirectoryRecord(data, this._record.getRockRidgeOffset());\n\t}\n}\n\n/**\n * Options for IsoFS file system instances.\n */\nexport interface IsoFSOptions {\n\t// The ISO file in a buffer.\n\tdata: Buffer;\n\t// The name of the ISO (optional; used for debug messages / identification via getName()).\n\tname?: string;\n}\n\n/**\n * Mounts an ISO file as a read-only file system.\n *\n * Supports:\n * * Vanilla ISO9660 ISOs\n * * Microsoft Joliet and Rock Ridge extensions to the ISO9660 standard\n */\nexport default class IsoFS extends SynchronousFileSystem implements FileSystem {\n\tpublic static readonly Name = 'IsoFS';\n\n\tpublic static readonly Options: FileSystemOptions = {\n\t\tdata: {\n\t\t\ttype: 'object',\n\t\t\tdescription: 'The ISO file in a buffer',\n\t\t\tvalidator: bufferValidator,\n\t\t},\n\t};\n\n\t/**\n\t * Creates an IsoFS instance with the given options.\n\t */\n\tpublic static Create(opts: IsoFSOptions, cb: BFSCallback<IsoFS>): void {\n\t\ttry {\n\t\t\tcb(null, new IsoFS(opts.data, opts.name));\n\t\t} catch (e) {\n\t\t\tcb(e);\n\t\t}\n\t}\n\n\tpublic static CreateAsync(opts: IsoFSOptions): Promise<IsoFS> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Create(opts, (error, fs) => {\n\t\t\t\tif (error || !fs) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(fs);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic static isAvailable(): boolean {\n\t\treturn true;\n\t}\n\n\tprivate _data: Buffer;\n\tprivate _pvd: PrimaryOrSupplementaryVolumeDescriptor;\n\tprivate _root: DirectoryRecord;\n\tprivate _name: string;\n\n\t/**\n\t * **Deprecated. Please use IsoFS.Create() method instead.**\n\t *\n\t * Constructs a read-only file system from the given ISO.\n\t * @param data The ISO file in a buffer.\n\t * @param name The name of the ISO (optional; used for debug messages / identification via getName()).\n\t */\n\tprivate constructor(data: Buffer, name: string = '') {\n\t\tsuper();\n\t\tthis._data = data;\n\t\t// Skip first 16 sectors.\n\t\tlet vdTerminatorFound = false;\n\t\tlet i = 16 * 2048;\n\t\tconst candidateVDs = new Array<PrimaryOrSupplementaryVolumeDescriptor>();\n\t\twhile (!vdTerminatorFound) {\n\t\t\tconst slice = data.slice(i);\n\t\t\tconst vd = new VolumeDescriptor(slice);\n\t\t\tswitch (vd.type()) {\n\t\t\t\tcase VolumeDescriptorTypeCode.PrimaryVolumeDescriptor:\n\t\t\t\t\tcandidateVDs.push(new PrimaryVolumeDescriptor(slice));\n\t\t\t\t\tbreak;\n\t\t\t\tcase VolumeDescriptorTypeCode.SupplementaryVolumeDescriptor:\n\t\t\t\t\tcandidateVDs.push(new SupplementaryVolumeDescriptor(slice));\n\t\t\t\t\tbreak;\n\t\t\t\tcase VolumeDescriptorTypeCode.VolumeDescriptorSetTerminator:\n\t\t\t\t\tvdTerminatorFound = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti += 2048;\n\t\t}\n\t\tif (candidateVDs.length === 0) {\n\t\t\tthrow new ApiError(ErrorCode.EIO, `Unable to find a suitable volume descriptor.`);\n\t\t}\n\t\tcandidateVDs.forEach(v => {\n\t\t\t// Take an SVD over a PVD.\n\t\t\tif (!this._pvd || this._pvd.type() !== VolumeDescriptorTypeCode.SupplementaryVolumeDescriptor) {\n\t\t\t\tthis._pvd = v;\n\t\t\t}\n\t\t});\n\t\tthis._root = this._pvd.rootDirectoryEntry(data);\n\t\tthis._name = name;\n\t}\n\n\tpublic getName(): string {\n\t\tlet name = `IsoFS${this._name}${this._pvd ? `-${this._pvd.name()}` : ''}`;\n\t\tif (this._root && this._root.hasRockRidge()) {\n\t\t\tname += `-RockRidge`;\n\t\t}\n\t\treturn name;\n\t}\n\n\tpublic diskSpace(path: string, cb: (total: number, free: number) => void): void {\n\t\t// Read-only file system.\n\t\tcb(this._data.length, 0);\n\t}\n\n\tpublic isReadOnly(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic supportsLinks(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic supportsProps(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic supportsSynch(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic statSync(p: string, isLstat: boolean): Stats {\n\t\tconst record = this._getDirectoryRecord(p);\n\t\tif (record === null) {\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t}\n\t\treturn this._getStats(p, record)!;\n\t}\n\n\tpublic openSync(p: string, flags: FileFlag, mode: number): File {\n\t\t// INVARIANT: Cannot write to RO file systems.\n\t\tif (flags.isWriteable()) {\n\t\t\tthrow new ApiError(ErrorCode.EPERM, p);\n\t\t}\n\t\t// Check if the path exists, and is a file.\n\t\tconst record = this._getDirectoryRecord(p);\n\t\tif (!record) {\n\t\t\tthrow ApiError.ENOENT(p);\n\t\t} else if (record.isSymlink(this._data)) {\n\t\t\treturn this.openSync(path.resolve(p, record.getSymlinkPath(this._data)), flags, mode);\n\t\t} else {\n\t\t\tconst data = !record.isDirectory(this._data) ? record.getFile(this._data) : undefined;\n\t\t\tconst stats = this._getStats(p, record)!;\n\t\t\tswitch (flags.pathExistsAction()) {\n\t\t\t\tcase ActionType.THROW_EXCEPTION:\n\t\t\t\tcase ActionType.TRUNCATE_FILE:\n\t\t\t\t\tthrow ApiError.EEXIST(p);\n\t\t\t\tcase ActionType.NOP:\n\t\t\t\t\treturn new NoSyncFile(this, p, flags, stats, data);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid FileMode object.');\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readdirSync(path: string): string[] {\n\t\t// Check if it exists.\n\t\tconst record = this._getDirectoryRecord(path);\n\t\tif (!record) {\n\t\t\tthrow ApiError.ENOENT(path);\n\t\t} else if (record.isDirectory(this._data)) {\n\t\t\treturn record.getDirectory(this._data).getFileList().slice(0);\n\t\t} else {\n\t\t\tthrow ApiError.ENOTDIR(path);\n\t\t}\n\t}\n\n\t/**\n\t * Specially-optimized readfile.\n\t */\n\tpublic readFileSync(fname: string, encoding: BufferEncoding, flag: FileFlag): any {\n\t\t// Get file.\n\t\tconst fd = this.openSync(fname, flag, 0x1a4);\n\t\ttry {\n\t\t\tconst fdCast = <NoSyncFile<IsoFS>>fd;\n\t\t\tconst fdBuff = <Buffer>fdCast.getBuffer();\n\t\t\tif (encoding === null) {\n\t\t\t\treturn copyingSlice(fdBuff);\n\t\t\t}\n\t\t\treturn fdBuff.toString(encoding);\n\t\t} finally {\n\t\t\tfd.closeSync();\n\t\t}\n\t}\n\n\tprivate _getDirectoryRecord(path: string): DirectoryRecord | null {\n\t\t// Special case.\n\t\tif (path === '/') {\n\t\t\treturn this._root;\n\t\t}\n\t\tconst components = path.split('/').slice(1);\n\t\tlet dir = this._root;\n\t\tfor (const component of components) {\n\t\t\tif (dir.isDirectory(this._data)) {\n\t\t\t\tdir = dir.getDirectory(this._data).getRecord(component);\n\t\t\t\tif (!dir) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn dir;\n\t}\n\n\tprivate _getStats(p: string, record: DirectoryRecord): Stats | null {\n\t\tif (record.isSymlink(this._data)) {\n\t\t\tconst newP = path.resolve(p, record.getSymlinkPath(this._data));\n\t\t\tconst dirRec = this._getDirectoryRecord(newP);\n\t\t\tif (!dirRec) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn this._getStats(newP, dirRec);\n\t\t} else {\n\t\t\tconst len = record.dataLength();\n\t\t\tlet mode = 0x16d;\n\t\t\tconst date = record.recordingDate().getTime();\n\t\t\tlet atime = date;\n\t\t\tlet mtime = date;\n\t\t\tlet ctime = date;\n\t\t\tif (record.hasRockRidge()) {\n\t\t\t\tconst entries = record.getSUEntries(this._data);\n\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\tif (entry instanceof PXEntry) {\n\t\t\t\t\t\tmode = entry.mode();\n\t\t\t\t\t} else if (entry instanceof TFEntry) {\n\t\t\t\t\t\tconst flags = entry.flags();\n\t\t\t\t\t\tif (flags & TFFlags.ACCESS) {\n\t\t\t\t\t\t\tatime = entry.access()!.getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (flags & TFFlags.MODIFY) {\n\t\t\t\t\t\t\tmtime = entry.modify()!.getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (flags & TFFlags.CREATION) {\n\t\t\t\t\t\t\tctime = entry.creation()!.getTime();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Mask out writeable flags. This is a RO file system.\n\t\t\tmode = mode & 0x16d;\n\t\t\treturn new Stats(record.isDirectory(this._data) ? FileType.DIRECTORY : FileType.FILE, len, mode, atime, mtime, ctime);\n\t\t}\n\t}\n}\n"]}