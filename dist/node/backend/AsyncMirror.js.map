{"version":3,"file":"AsyncMirror.js","sourceRoot":"","sources":["../../../src/backend/AsyncMirror.ts"],"names":[],"mappings":"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","sourcesContent":["import { FileSystem, SynchronousFileSystem, BFSOneArgCallback, BFSCallback, FileSystemOptions } from '../core/file_system';\nimport { ApiError, ErrorCode } from '../core/api_error';\nimport { FileFlag } from '../core/file_flag';\nimport { File } from '../core/file';\nimport Stats from '../core/stats';\nimport PreloadFile from '../generic/preload_file';\nimport * as path from 'path';\nimport Cred from '../core/cred';\nimport type { Buffer } from 'buffer';\n/**\n * @hidden\n */\ninterface IAsyncOperation {\n\tapiMethod: string;\n\targuments: any[];\n}\n\n/**\n * We define our own file to interpose on syncSync() for mirroring purposes.\n */\nclass MirrorFile extends PreloadFile<AsyncMirror> implements File {\n\tconstructor(fs: AsyncMirror, path: string, flag: FileFlag, stat: Stats, data: Buffer) {\n\t\tsuper(fs, path, flag, stat, data);\n\t}\n\n\tpublic syncSync(): void {\n\t\tif (this.isDirty()) {\n\t\t\tthis._fs._syncSync(this);\n\t\t\tthis.resetDirty();\n\t\t}\n\t}\n\n\tpublic closeSync(): void {\n\t\tthis.syncSync();\n\t}\n}\n\n/**\n * Configuration options for the AsyncMirror file system.\n */\nexport interface AsyncMirrorOptions {\n\t// The synchronous file system to mirror the asynchronous file system to.\n\tsync: FileSystem;\n\t// The asynchronous file system to mirror.\n\tasync: FileSystem;\n}\n\n/**\n * AsyncMirrorFS mirrors a synchronous filesystem into an asynchronous filesystem\n * by:\n *\n * * Performing operations over the in-memory copy, while asynchronously pipelining them\n *   to the backing store.\n * * During application loading, the contents of the async file system can be reloaded into\n *   the synchronous store, if desired.\n *\n * The two stores will be kept in sync. The most common use-case is to pair a synchronous\n * in-memory filesystem with an asynchronous backing store.\n *\n * Example: Mirroring an IndexedDB file system to an in memory file system. Now, you can use\n * IndexedDB synchronously.\n *\n * ```javascript\n * BrowserFS.configure({\n *   fs: \"AsyncMirror\",\n *   options: {\n *     sync: { fs: \"InMemory\" },\n *     async: { fs: \"IndexedDB\" }\n *   }\n * }, function(e) {\n *   // BrowserFS is initialized and ready-to-use!\n * });\n * ```\n *\n * Or, alternatively:\n *\n * ```javascript\n * BrowserFS.FileSystem.IndexedDB.Create(function(e, idbfs) {\n *   BrowserFS.FileSystem.InMemory.Create(function(e, inMemory) {\n *     BrowserFS.FileSystem.AsyncMirror({\n *       sync: inMemory, async: idbfs\n *     }, function(e, mirrored) {\n *       BrowserFS.initialize(mirrored);\n *     });\n *   });\n * });\n * ```\n */\nexport default class AsyncMirror extends SynchronousFileSystem implements FileSystem {\n\tpublic static readonly Name = 'AsyncMirror';\n\n\tpublic static readonly Options: FileSystemOptions = {\n\t\tsync: {\n\t\t\ttype: 'object',\n\t\t\tdescription: 'The synchronous file system to mirror the asynchronous file system to.',\n\t\t\tvalidator: (v: any, cb: BFSOneArgCallback) => {\n\t\t\t\tif (v && typeof v['supportsSynch'] === 'function' && v.supportsSynch()) {\n\t\t\t\t\tcb();\n\t\t\t\t} else {\n\t\t\t\t\tcb(new ApiError(ErrorCode.EINVAL, `'sync' option must be a file system that supports synchronous operations`));\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\tasync: {\n\t\t\ttype: 'object',\n\t\t\tdescription: 'The asynchronous file system to mirror.',\n\t\t},\n\t};\n\n\t/**\n\t * Constructs and initializes an AsyncMirror file system with the given options.\n\t */\n\tpublic static Create(opts: AsyncMirrorOptions, cb: BFSCallback<AsyncMirror>): void {\n\t\ttry {\n\t\t\tconst fs = new AsyncMirror(opts.sync, opts.async);\n\t\t\tfs._initialize((e?) => {\n\t\t\t\tif (e) {\n\t\t\t\t\tcb(e);\n\t\t\t\t} else {\n\t\t\t\t\tcb(null, fs);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tcb(e);\n\t\t}\n\t}\n\n\t/**\n\t * Asynchronously constructs and initializes an AsyncMirror file system with the given options.\n\t */\n\tpublic static CreateAsync(opts: AsyncMirrorOptions): Promise<AsyncMirror> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Create(opts, (error, fs) => {\n\t\t\t\tif (error || !fs) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(fs);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic static isAvailable(): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Queue of pending asynchronous operations.\n\t */\n\tprivate _queue: IAsyncOperation[] = [];\n\tprivate _queueRunning: boolean = false;\n\tprivate _sync: FileSystem;\n\tprivate _async: FileSystem;\n\tprivate _isInitialized: boolean = false;\n\tprivate _initializeCallbacks: ((e?: ApiError) => void)[] = [];\n\n\t/**\n\t * **Deprecated; use AsyncMirror.Create() method instead.**\n\t *\n\t * Mirrors the synchronous file system into the asynchronous file system.\n\t *\n\t * **IMPORTANT**: You must call `initialize` on the file system before it can be used.\n\t * @param sync The synchronous file system to mirror the asynchronous file system to.\n\t * @param async The asynchronous file system to mirror.\n\t */\n\tconstructor(sync: FileSystem, async: FileSystem) {\n\t\tsuper();\n\t\tthis._sync = sync;\n\t\tthis._async = async;\n\t}\n\n\tpublic getName(): string {\n\t\treturn AsyncMirror.Name;\n\t}\n\n\tpublic _syncSync(fd: PreloadFile<any>) {\n\t\tconst stats = fd.getStats();\n\t\tthis._sync.writeFileSync(fd.getPath(), fd.getBuffer(), null, FileFlag.getFileFlag('w'), stats.mode, stats.getCred(0, 0));\n\t\tthis.enqueueOp({\n\t\t\tapiMethod: 'writeFile',\n\t\t\targuments: [fd.getPath(), fd.getBuffer(), null, fd.getFlag(), stats.mode, stats.getCred(0, 0)],\n\t\t});\n\t}\n\n\tpublic isReadOnly(): boolean {\n\t\treturn false;\n\t}\n\tpublic supportsSynch(): boolean {\n\t\treturn true;\n\t}\n\tpublic supportsLinks(): boolean {\n\t\treturn false;\n\t}\n\tpublic supportsProps(): boolean {\n\t\treturn this._sync.supportsProps() && this._async.supportsProps();\n\t}\n\n\tpublic renameSync(oldPath: string, newPath: string, cred: Cred): void {\n\t\tthis._sync.renameSync(oldPath, newPath, cred);\n\t\tthis.enqueueOp({\n\t\t\tapiMethod: 'rename',\n\t\t\targuments: [oldPath, newPath, cred],\n\t\t});\n\t}\n\n\tpublic statSync(p: string, isLstat: boolean, cred: Cred): Stats {\n\t\treturn this._sync.statSync(p, isLstat, cred);\n\t}\n\n\tpublic openSync(p: string, flag: FileFlag, mode: number, cred: Cred): File {\n\t\t// Sanity check: Is this open/close permitted?\n\t\tconst fd = this._sync.openSync(p, flag, mode, cred);\n\t\tfd.closeSync();\n\t\treturn new MirrorFile(this, p, flag, this._sync.statSync(p, false, cred), this._sync.readFileSync(p, null, FileFlag.getFileFlag('r'), cred));\n\t}\n\n\tpublic unlinkSync(p: string, cred: Cred): void {\n\t\tthis._sync.unlinkSync(p, cred);\n\t\tthis.enqueueOp({\n\t\t\tapiMethod: 'unlink',\n\t\t\targuments: [p, cred],\n\t\t});\n\t}\n\n\tpublic rmdirSync(p: string, cred: Cred): void {\n\t\tthis._sync.rmdirSync(p, cred);\n\t\tthis.enqueueOp({\n\t\t\tapiMethod: 'rmdir',\n\t\t\targuments: [p, cred],\n\t\t});\n\t}\n\n\tpublic mkdirSync(p: string, mode: number, cred: Cred): void {\n\t\tthis._sync.mkdirSync(p, mode, cred);\n\t\tthis.enqueueOp({\n\t\t\tapiMethod: 'mkdir',\n\t\t\targuments: [p, mode, cred],\n\t\t});\n\t}\n\n\tpublic readdirSync(p: string, cred: Cred): string[] {\n\t\treturn this._sync.readdirSync(p, cred);\n\t}\n\n\tpublic existsSync(p: string, cred: Cred): boolean {\n\t\treturn this._sync.existsSync(p, cred);\n\t}\n\n\tpublic chmodSync(p: string, isLchmod: boolean, mode: number, cred: Cred): void {\n\t\tthis._sync.chmodSync(p, isLchmod, mode, cred);\n\t\tthis.enqueueOp({\n\t\t\tapiMethod: 'chmod',\n\t\t\targuments: [p, isLchmod, mode, cred],\n\t\t});\n\t}\n\n\tpublic chownSync(p: string, isLchown: boolean, new_uid: number, new_gid: number, cred: Cred): void {\n\t\tthis._sync.chownSync(p, isLchown, new_uid, new_gid, cred);\n\t\tthis.enqueueOp({\n\t\t\tapiMethod: 'chown',\n\t\t\targuments: [p, isLchown, new_uid, new_gid, cred],\n\t\t});\n\t}\n\n\tpublic utimesSync(p: string, atime: Date, mtime: Date, cred: Cred): void {\n\t\tthis._sync.utimesSync(p, atime, mtime, cred);\n\t\tthis.enqueueOp({\n\t\t\tapiMethod: 'utimes',\n\t\t\targuments: [p, atime, mtime, cred],\n\t\t});\n\t}\n\n\t/**\n\t * Called once to load up files from async storage into sync storage.\n\t */\n\tprivate _initialize(userCb: BFSOneArgCallback): void {\n\t\tconst callbacks = this._initializeCallbacks;\n\n\t\tconst end = (e?: ApiError): void => {\n\t\t\tthis._isInitialized = !e;\n\t\t\tthis._initializeCallbacks = [];\n\t\t\tcallbacks.forEach(cb => cb(e));\n\t\t};\n\n\t\tif (!this._isInitialized) {\n\t\t\t// First call triggers initialization, the rest wait.\n\t\t\tif (callbacks.push(userCb) === 1) {\n\t\t\t\tconst copyDirectory = (p: string, mode: number, cb: BFSOneArgCallback) => {\n\t\t\t\t\t\tif (p !== '/') {\n\t\t\t\t\t\t\tthis._async.stat(p, true, Cred.Root, (err?: ApiError, stats?: Stats) => {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tcb(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._sync.mkdirSync(p, stats.mode, stats.getCred());\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._async.readdir(p, Cred.Root, (err, files) => {\n\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t// NOTE: This function must not be in a lexically nested statement,\n\t\t\t\t\t\t\t// such as an if or while statement. Safari refuses to run the\n\t\t\t\t\t\t\t// script since it is undefined behavior.\n\t\t\t\t\t\t\tfunction copyNextFile(err?: ApiError) {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tcb(err);\n\t\t\t\t\t\t\t\t} else if (i < files!.length) {\n\t\t\t\t\t\t\t\t\tcopyItem(path.join(p, files![i]), copyNextFile);\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcb();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcb(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcopyNextFile();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tcopyFile = (p: string, mode: number, cb: BFSOneArgCallback) => {\n\t\t\t\t\t\tthis._async.readFile(p, null, FileFlag.getFileFlag('r'), Cred.Root, (err, data) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcb(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tthis._sync.writeFileSync(p, data!, null, FileFlag.getFileFlag('w'), mode, Cred.Root);\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\terr = e;\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tcb(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tcopyItem = (p: string, cb: BFSOneArgCallback) => {\n\t\t\t\t\t\tthis._async.stat(p, false, Cred.Root, (err, stats) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcb(err);\n\t\t\t\t\t\t\t} else if (stats!.isDirectory()) {\n\t\t\t\t\t\t\t\tcopyDirectory(p, stats!.mode, cb);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcopyFile(p, stats!.mode, cb);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\tcopyDirectory('/', 0, end);\n\t\t\t}\n\t\t} else {\n\t\t\tuserCb();\n\t\t}\n\t}\n\n\tprivate enqueueOp(op: IAsyncOperation) {\n\t\tthis._queue.push(op);\n\t\tif (!this._queueRunning) {\n\t\t\tthis._queueRunning = true;\n\t\t\tconst doNextOp = (err?: ApiError) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tthrow new Error(`WARNING: File system has desynchronized. Received following error: ${err}\\n$`);\n\t\t\t\t}\n\t\t\t\tif (this._queue.length > 0) {\n\t\t\t\t\tconst op = this._queue.shift()!,\n\t\t\t\t\t\targs = op.arguments;\n\t\t\t\t\targs.push(doNextOp);\n\t\t\t\t\t(<Function>(<any>this._async)[op.apiMethod]).apply(this._async, args);\n\t\t\t\t} else {\n\t\t\t\t\tthis._queueRunning = false;\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoNextOp();\n\t\t}\n\t}\n}\n"]}