{"version":3,"file":"ZipFS.js","sourceRoot":"","sources":["../../../src/backend/ZipFS.ts"],"names":[],"mappings":"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","sourcesContent":["import { ApiError, ErrorCode } from '../core/api_error';\nimport { default as Stats, FileType } from '../core/stats';\nimport { SynchronousFileSystem, FileSystem, BFSCallback, FileSystemOptions } from '../core/file_system';\nimport { File } from '../core/file';\nimport { FileFlag, ActionType } from '../core/file_flag';\nimport { NoSyncFile } from '../generic/preload_file';\nimport { copyingSlice, bufferValidator } from '../core/util';\nimport ExtendedASCII from '../generic/extended_ascii';\nimport setImmediate from '../generic/setImmediate';\nimport { inflateRawSync as inflateRaw } from 'zlib';\nimport { FileIndex, DirInode, FileInode, isDirInode, isFileInode } from '../generic/file_index';\nimport type { Buffer } from 'buffer';\n\n/**\n * Maps CompressionMethod => function that decompresses.\n * @hidden\n */\nconst decompressionMethods: { [method: number]: (data: Buffer, compressedSize: number, uncompressedSize: number, flags: number) => Buffer } = {};\n\n/**\n * 4.4.2.2: Indicates the compatibiltiy of a file's external attributes.\n */\nexport enum ExternalFileAttributeType {\n\tMSDOS = 0,\n\tAMIGA = 1,\n\tOPENVMS = 2,\n\tUNIX = 3,\n\tVM_CMS = 4,\n\tATARI_ST = 5,\n\tOS2_HPFS = 6,\n\tMAC = 7,\n\tZ_SYSTEM = 8,\n\tCP_M = 9,\n\tNTFS = 10,\n\tMVS = 11,\n\tVSE = 12,\n\tACORN_RISC = 13,\n\tVFAT = 14,\n\tALT_MVS = 15,\n\tBEOS = 16,\n\tTANDEM = 17,\n\tOS_400 = 18,\n\tOSX = 19,\n}\n\n/**\n * 4.4.5\n */\nexport enum CompressionMethod {\n\tSTORED = 0, // The file is stored (no compression)\n\tSHRUNK = 1, // The file is Shrunk\n\tREDUCED_1 = 2, // The file is Reduced with compression factor 1\n\tREDUCED_2 = 3, // The file is Reduced with compression factor 2\n\tREDUCED_3 = 4, // The file is Reduced with compression factor 3\n\tREDUCED_4 = 5, // The file is Reduced with compression factor 4\n\tIMPLODE = 6, // The file is Imploded\n\tDEFLATE = 8, // The file is Deflated\n\tDEFLATE64 = 9, // Enhanced Deflating using Deflate64(tm)\n\tTERSE_OLD = 10, // PKWARE Data Compression Library Imploding (old IBM TERSE)\n\tBZIP2 = 12, // File is compressed using BZIP2 algorithm\n\tLZMA = 14, // LZMA (EFS)\n\tTERSE_NEW = 18, // File is compressed using IBM TERSE (new)\n\tLZ77 = 19, // IBM LZ77 z Architecture (PFS)\n\tWAVPACK = 97, // WavPack compressed data\n\tPPMD = 98, // PPMd version I, Rev 1\n}\n\n/**\n * Converts the input time and date in MS-DOS format into a JavaScript Date\n * object.\n * @hidden\n */\nfunction msdos2date(time: number, date: number): Date {\n\t// MS-DOS Date\n\t// |0 0 0 0  0|0 0 0  0|0 0 0  0 0 0 0\n\t//   D (1-31)  M (1-23)  Y (from 1980)\n\tconst day = date & 0x1f;\n\t// JS date is 0-indexed, DOS is 1-indexed.\n\tconst month = ((date >> 5) & 0xf) - 1;\n\tconst year = (date >> 9) + 1980;\n\t// MS DOS Time\n\t// |0 0 0 0  0|0 0 0  0 0 0|0  0 0 0 0\n\t//    Second      Minute       Hour\n\tconst second = time & 0x1f;\n\tconst minute = (time >> 5) & 0x3f;\n\tconst hour = time >> 11;\n\treturn new Date(year, month, day, hour, minute, second);\n}\n\n/**\n * Safely returns the string from the buffer, even if it is 0 bytes long.\n * (Normally, calling toString() on a buffer with start === end causes an\n * exception).\n * @hidden\n */\nfunction safeToString(buff: Buffer, useUTF8: boolean, start: number, length: number): string {\n\tif (length === 0) {\n\t\treturn '';\n\t} else if (useUTF8) {\n\t\treturn buff.toString('utf8', start, start + length);\n\t} else {\n\t\treturn ExtendedASCII.byte2str(buff.slice(start, start + length));\n\t}\n}\n\n/*\n   4.3.6 Overall .ZIP file format:\n\n      [local file header 1]\n      [encryption header 1]\n      [file data 1]\n      [data descriptor 1]\n      .\n      .\n      .\n      [local file header n]\n      [encryption header n]\n      [file data n]\n      [data descriptor n]\n      [archive decryption header]\n      [archive extra data record]\n      [central directory header 1]\n      .\n      .\n      .\n      [central directory header n]\n      [zip64 end of central directory record]\n      [zip64 end of central directory locator]\n      [end of central directory record]\n*/\n\n/**\n * 4.3.7  Local file header:\n *\n *     local file header signature     4 bytes  (0x04034b50)\n *     version needed to extract       2 bytes\n *     general purpose bit flag        2 bytes\n *     compression method              2 bytes\n *    last mod file time              2 bytes\n *    last mod file date              2 bytes\n *    crc-32                          4 bytes\n *    compressed size                 4 bytes\n *    uncompressed size               4 bytes\n *    file name length                2 bytes\n *    extra field length              2 bytes\n *\n *    file name (variable size)\n *    extra field (variable size)\n */\nexport class FileHeader {\n\tconstructor(private data: Buffer) {\n\t\tif (data.readUInt32LE(0) !== 0x04034b50) {\n\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid Zip file: Local file header has invalid signature: ' + this.data.readUInt32LE(0));\n\t\t}\n\t}\n\tpublic versionNeeded(): number {\n\t\treturn this.data.readUInt16LE(4);\n\t}\n\tpublic flags(): number {\n\t\treturn this.data.readUInt16LE(6);\n\t}\n\tpublic compressionMethod(): CompressionMethod {\n\t\treturn this.data.readUInt16LE(8);\n\t}\n\tpublic lastModFileTime(): Date {\n\t\t// Time and date is in MS-DOS format.\n\t\treturn msdos2date(this.data.readUInt16LE(10), this.data.readUInt16LE(12));\n\t}\n\tpublic rawLastModFileTime(): number {\n\t\treturn this.data.readUInt32LE(10);\n\t}\n\tpublic crc32(): number {\n\t\treturn this.data.readUInt32LE(14);\n\t}\n\t/**\n\t * These two values are COMPLETELY USELESS.\n\t *\n\t * Section 4.4.9:\n\t *   If bit 3 of the general purpose bit flag is set,\n\t *   these fields are set to zero in the local header and the\n\t *   correct values are put in the data descriptor and\n\t *   in the central directory.\n\t *\n\t * So we'll just use the central directory's values.\n\t */\n\t// public compressedSize(): number { return this.data.readUInt32LE(18); }\n\t// public uncompressedSize(): number { return this.data.readUInt32LE(22); }\n\tpublic fileNameLength(): number {\n\t\treturn this.data.readUInt16LE(26);\n\t}\n\tpublic extraFieldLength(): number {\n\t\treturn this.data.readUInt16LE(28);\n\t}\n\tpublic fileName(): string {\n\t\treturn safeToString(this.data, this.useUTF8(), 30, this.fileNameLength());\n\t}\n\tpublic extraField(): Buffer {\n\t\tconst start = 30 + this.fileNameLength();\n\t\treturn this.data.slice(start, start + this.extraFieldLength());\n\t}\n\tpublic totalSize(): number {\n\t\treturn 30 + this.fileNameLength() + this.extraFieldLength();\n\t}\n\tpublic useUTF8(): boolean {\n\t\treturn (this.flags() & 0x800) === 0x800;\n\t}\n}\n\n/**\n * 4.3.8  File data\n *\n *   Immediately following the local header for a file\n *   SHOULD be placed the compressed or stored data for the file.\n *   If the file is encrypted, the encryption header for the file\n *   SHOULD be placed after the local header and before the file\n *   data. The series of [local file header][encryption header]\n *   [file data][data descriptor] repeats for each file in the\n *   .ZIP archive.\n *\n *   Zero-byte files, directories, and other file types that\n *   contain no content MUST not include file data.\n */\nexport class FileData {\n\tconstructor(private header: FileHeader, private record: CentralDirectory, private data: Buffer) {}\n\tpublic decompress(): Buffer {\n\t\t// Check the compression\n\t\tconst compressionMethod: CompressionMethod = this.header.compressionMethod();\n\t\tconst fcn = decompressionMethods[compressionMethod];\n\t\tif (fcn) {\n\t\t\treturn fcn(this.data, this.record.compressedSize(), this.record.uncompressedSize(), this.record.flag());\n\t\t} else {\n\t\t\tlet name: string = CompressionMethod[compressionMethod];\n\t\t\tif (!name) {\n\t\t\t\tname = `Unknown: ${compressionMethod}`;\n\t\t\t}\n\t\t\tthrow new ApiError(ErrorCode.EINVAL, `Invalid compression method on file '${this.header.fileName()}': ${name}`);\n\t\t}\n\t}\n\tpublic getHeader(): FileHeader {\n\t\treturn this.header;\n\t}\n\tpublic getRecord(): CentralDirectory {\n\t\treturn this.record;\n\t}\n\tpublic getRawData(): Buffer {\n\t\treturn this.data;\n\t}\n}\n\n/**\n * 4.3.9  Data descriptor:\n *\n *    crc-32                          4 bytes\n *    compressed size                 4 bytes\n *    uncompressed size               4 bytes\n */\nexport class DataDescriptor {\n\tconstructor(private data: Buffer) {}\n\tpublic crc32(): number {\n\t\treturn this.data.readUInt32LE(0);\n\t}\n\tpublic compressedSize(): number {\n\t\treturn this.data.readUInt32LE(4);\n\t}\n\tpublic uncompressedSize(): number {\n\t\treturn this.data.readUInt32LE(8);\n\t}\n}\n\n/*\n` 4.3.10  Archive decryption header:\n\n      4.3.10.1 The Archive Decryption Header is introduced in version 6.2\n      of the ZIP format specification.  This record exists in support\n      of the Central Directory Encryption Feature implemented as part of\n      the Strong Encryption Specification as described in this document.\n      When the Central Directory Structure is encrypted, this decryption\n      header MUST precede the encrypted data segment.\n */\n/**\n * 4.3.11  Archive extra data record:\n *\n *      archive extra data signature    4 bytes  (0x08064b50)\n *      extra field length              4 bytes\n *      extra field data                (variable size)\n *\n *    4.3.11.1 The Archive Extra Data Record is introduced in version 6.2\n *    of the ZIP format specification.  This record MAY be used in support\n *    of the Central Directory Encryption Feature implemented as part of\n *    the Strong Encryption Specification as described in this document.\n *    When present, this record MUST immediately precede the central\n *    directory data structure.\n */\nexport class ArchiveExtraDataRecord {\n\tconstructor(private data: Buffer) {\n\t\tif (this.data.readUInt32LE(0) !== 0x08064b50) {\n\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid archive extra data record signature: ' + this.data.readUInt32LE(0));\n\t\t}\n\t}\n\tpublic length(): number {\n\t\treturn this.data.readUInt32LE(4);\n\t}\n\tpublic extraFieldData(): Buffer {\n\t\treturn this.data.slice(8, 8 + this.length());\n\t}\n}\n\n/**\n * 4.3.13 Digital signature:\n *\n *      header signature                4 bytes  (0x05054b50)\n *      size of data                    2 bytes\n *      signature data (variable size)\n *\n *    With the introduction of the Central Directory Encryption\n *    feature in version 6.2 of this specification, the Central\n *    Directory Structure MAY be stored both compressed and encrypted.\n *    Although not required, it is assumed when encrypting the\n *    Central Directory Structure, that it will be compressed\n *    for greater storage efficiency.  Information on the\n *    Central Directory Encryption feature can be found in the section\n *    describing the Strong Encryption Specification. The Digital\n *    Signature record will be neither compressed nor encrypted.\n */\nexport class DigitalSignature {\n\tconstructor(private data: Buffer) {\n\t\tif (this.data.readUInt32LE(0) !== 0x05054b50) {\n\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid digital signature signature: ' + this.data.readUInt32LE(0));\n\t\t}\n\t}\n\tpublic size(): number {\n\t\treturn this.data.readUInt16LE(4);\n\t}\n\tpublic signatureData(): Buffer {\n\t\treturn this.data.slice(6, 6 + this.size());\n\t}\n}\n\n/**\n * 4.3.12  Central directory structure:\n *\n *  central file header signature   4 bytes  (0x02014b50)\n *  version made by                 2 bytes\n *  version needed to extract       2 bytes\n *  general purpose bit flag        2 bytes\n *  compression method              2 bytes\n *  last mod file time              2 bytes\n *  last mod file date              2 bytes\n *  crc-32                          4 bytes\n *  compressed size                 4 bytes\n *  uncompressed size               4 bytes\n *  file name length                2 bytes\n *  extra field length              2 bytes\n *  file comment length             2 bytes\n *  disk number start               2 bytes\n *  internal file attributes        2 bytes\n *  external file attributes        4 bytes\n *  relative offset of local header 4 bytes\n *\n *  file name (variable size)\n *  extra field (variable size)\n *  file comment (variable size)\n */\nexport class CentralDirectory {\n\t// Optimization: The filename is frequently read, so stash it here.\n\tprivate _filename: string;\n\tconstructor(private zipData: Buffer, private data: Buffer) {\n\t\t// Sanity check.\n\t\tif (this.data.readUInt32LE(0) !== 0x02014b50) {\n\t\t\tthrow new ApiError(ErrorCode.EINVAL, `Invalid Zip file: Central directory record has invalid signature: ${this.data.readUInt32LE(0)}`);\n\t\t}\n\t\tthis._filename = this.produceFilename();\n\t}\n\tpublic versionMadeBy(): number {\n\t\treturn this.data.readUInt16LE(4);\n\t}\n\tpublic versionNeeded(): number {\n\t\treturn this.data.readUInt16LE(6);\n\t}\n\tpublic flag(): number {\n\t\treturn this.data.readUInt16LE(8);\n\t}\n\tpublic compressionMethod(): CompressionMethod {\n\t\treturn this.data.readUInt16LE(10);\n\t}\n\tpublic lastModFileTime(): Date {\n\t\t// Time and date is in MS-DOS format.\n\t\treturn msdos2date(this.data.readUInt16LE(12), this.data.readUInt16LE(14));\n\t}\n\tpublic rawLastModFileTime(): number {\n\t\treturn this.data.readUInt32LE(12);\n\t}\n\tpublic crc32(): number {\n\t\treturn this.data.readUInt32LE(16);\n\t}\n\tpublic compressedSize(): number {\n\t\treturn this.data.readUInt32LE(20);\n\t}\n\tpublic uncompressedSize(): number {\n\t\treturn this.data.readUInt32LE(24);\n\t}\n\tpublic fileNameLength(): number {\n\t\treturn this.data.readUInt16LE(28);\n\t}\n\tpublic extraFieldLength(): number {\n\t\treturn this.data.readUInt16LE(30);\n\t}\n\tpublic fileCommentLength(): number {\n\t\treturn this.data.readUInt16LE(32);\n\t}\n\tpublic diskNumberStart(): number {\n\t\treturn this.data.readUInt16LE(34);\n\t}\n\tpublic internalAttributes(): number {\n\t\treturn this.data.readUInt16LE(36);\n\t}\n\tpublic externalAttributes(): number {\n\t\treturn this.data.readUInt32LE(38);\n\t}\n\tpublic headerRelativeOffset(): number {\n\t\treturn this.data.readUInt32LE(42);\n\t}\n\tpublic produceFilename(): string {\n\t\t/*\n      4.4.17.1 claims:\n      * All slashes are forward ('/') slashes.\n      * Filename doesn't begin with a slash.\n      * No drive letters or any nonsense like that.\n      * If filename is missing, the input came from standard input.\n\n      Unfortunately, this isn't true in practice. Some Windows zip utilities use\n      a backslash here, but the correct Unix-style path in file headers.\n\n      To avoid seeking all over the file to recover the known-good filenames\n      from file headers, we simply convert '/' to '\\' here.\n    */\n\t\tconst fileName: string = safeToString(this.data, this.useUTF8(), 46, this.fileNameLength());\n\t\treturn fileName.replace(/\\\\/g, '/');\n\t}\n\tpublic fileName(): string {\n\t\treturn this._filename;\n\t}\n\tpublic rawFileName(): Buffer {\n\t\treturn this.data.slice(46, 46 + this.fileNameLength());\n\t}\n\tpublic extraField(): Buffer {\n\t\tconst start = 44 + this.fileNameLength();\n\t\treturn this.data.slice(start, start + this.extraFieldLength());\n\t}\n\tpublic fileComment(): string {\n\t\tconst start = 46 + this.fileNameLength() + this.extraFieldLength();\n\t\treturn safeToString(this.data, this.useUTF8(), start, this.fileCommentLength());\n\t}\n\tpublic rawFileComment(): Buffer {\n\t\tconst start = 46 + this.fileNameLength() + this.extraFieldLength();\n\t\treturn this.data.slice(start, start + this.fileCommentLength());\n\t}\n\tpublic totalSize(): number {\n\t\treturn 46 + this.fileNameLength() + this.extraFieldLength() + this.fileCommentLength();\n\t}\n\tpublic isDirectory(): boolean {\n\t\t// NOTE: This assumes that the zip file implementation uses the lower byte\n\t\t//       of external attributes for DOS attributes for\n\t\t//       backwards-compatibility. This is not mandated, but appears to be\n\t\t//       commonplace.\n\t\t//       According to the spec, the layout of external attributes is\n\t\t//       platform-dependent.\n\t\t//       If that fails, we also check if the name of the file ends in '/',\n\t\t//       which is what Java's ZipFile implementation does.\n\t\tconst fileName = this.fileName();\n\t\treturn (this.externalAttributes() & 0x10 ? true : false) || fileName.charAt(fileName.length - 1) === '/';\n\t}\n\tpublic isFile(): boolean {\n\t\treturn !this.isDirectory();\n\t}\n\tpublic useUTF8(): boolean {\n\t\treturn (this.flag() & 0x800) === 0x800;\n\t}\n\tpublic isEncrypted(): boolean {\n\t\treturn (this.flag() & 0x1) === 0x1;\n\t}\n\tpublic getFileData(): FileData {\n\t\t// Need to grab the header before we can figure out where the actual\n\t\t// compressed data starts.\n\t\tconst start = this.headerRelativeOffset();\n\t\tconst header = new FileHeader(this.zipData.slice(start));\n\t\treturn new FileData(header, this, this.zipData.slice(start + header.totalSize()));\n\t}\n\tpublic getData(): Buffer {\n\t\treturn this.getFileData().decompress();\n\t}\n\tpublic getRawData(): Buffer {\n\t\treturn this.getFileData().getRawData();\n\t}\n\tpublic getStats(): Stats {\n\t\treturn new Stats(FileType.FILE, this.uncompressedSize(), 0x16d, Date.now(), this.lastModFileTime().getTime());\n\t}\n}\n\n/**\n * 4.3.16: end of central directory record\n *  end of central dir signature    4 bytes  (0x06054b50)\n *  number of this disk             2 bytes\n *  number of the disk with the\n *  start of the central directory  2 bytes\n *  total number of entries in the\n *  central directory on this disk  2 bytes\n *  total number of entries in\n *  the central directory           2 bytes\n *  size of the central directory   4 bytes\n *  offset of start of central\n *  directory with respect to\n *  the starting disk number        4 bytes\n *  .ZIP file comment length        2 bytes\n *  .ZIP file comment       (variable size)\n */\nexport class EndOfCentralDirectory {\n\tconstructor(private data: Buffer) {\n\t\tif (this.data.readUInt32LE(0) !== 0x06054b50) {\n\t\t\tthrow new ApiError(ErrorCode.EINVAL, `Invalid Zip file: End of central directory record has invalid signature: ${this.data.readUInt32LE(0)}`);\n\t\t}\n\t}\n\tpublic diskNumber(): number {\n\t\treturn this.data.readUInt16LE(4);\n\t}\n\tpublic cdDiskNumber(): number {\n\t\treturn this.data.readUInt16LE(6);\n\t}\n\tpublic cdDiskEntryCount(): number {\n\t\treturn this.data.readUInt16LE(8);\n\t}\n\tpublic cdTotalEntryCount(): number {\n\t\treturn this.data.readUInt16LE(10);\n\t}\n\tpublic cdSize(): number {\n\t\treturn this.data.readUInt32LE(12);\n\t}\n\tpublic cdOffset(): number {\n\t\treturn this.data.readUInt32LE(16);\n\t}\n\tpublic cdZipCommentLength(): number {\n\t\treturn this.data.readUInt16LE(20);\n\t}\n\tpublic cdZipComment(): string {\n\t\t// Assuming UTF-8. The specification doesn't specify.\n\t\treturn safeToString(this.data, true, 22, this.cdZipCommentLength());\n\t}\n\tpublic rawCdZipComment(): Buffer {\n\t\treturn this.data.slice(22, 22 + this.cdZipCommentLength());\n\t}\n}\n\n/**\n * Contains the table of contents of a Zip file.\n */\nexport class ZipTOC {\n\tconstructor(public index: FileIndex<CentralDirectory>, public directoryEntries: CentralDirectory[], public eocd: EndOfCentralDirectory, public data: Buffer) {}\n}\n\n/**\n * Configuration options for a ZipFS file system.\n */\nexport interface ZipFSOptions {\n\t// The zip file as a binary buffer.\n\tzipData: Buffer;\n\t// The name of the zip file (optional).\n\tname?: string;\n}\n\n/**\n * Zip file-backed filesystem\n * Implemented according to the standard:\n * http://www.pkware.com/documents/casestudies/APPNOTE.TXT\n *\n * While there are a few zip libraries for JavaScript (e.g. JSZip and zip.js),\n * they are not a good match for BrowserFS. In particular, these libraries\n * perform a lot of unneeded data copying, and eagerly decompress every file\n * in the zip file upon loading to check the CRC32. They also eagerly decode\n * strings. Furthermore, these libraries duplicate functionality already present\n * in BrowserFS (e.g. UTF-8 decoding and binary data manipulation).\n *\n * This filesystem takes advantage of BrowserFS's Buffer implementation, which\n * efficiently represents the zip file in memory (in both ArrayBuffer-enabled\n * browsers *and* non-ArrayBuffer browsers), and which can neatly be 'sliced'\n * without copying data. Each struct defined in the standard is represented with\n * a buffer slice pointing to an offset in the zip file, and has getters for\n * each field. As we anticipate that this data will not be read often, we choose\n * not to store each struct field in the JavaScript object; instead, to reduce\n * memory consumption, we retrieve it directly from the binary data each time it\n * is requested.\n *\n * When the filesystem is instantiated, we determine the directory structure\n * of the zip file as quickly as possible. We lazily decompress and check the\n * CRC32 of files. We do not cache decompressed files; if this is a desired\n * feature, it is best implemented as a generic file system wrapper that can\n * cache data from arbitrary file systems.\n *\n * For inflation, we use `pako`'s implementation:\n * https://github.com/nodeca/pako\n *\n * Current limitations:\n * * No encryption.\n * * No ZIP64 support.\n * * Read-only.\n *   Write support would require that we:\n *   - Keep track of changed/new files.\n *   - Compress changed files, and generate appropriate metadata for each.\n *   - Update file offsets for other files in the zip file.\n *   - Stream it out to a location.\n *   This isn't that bad, so we might do this at a later date.\n */\nexport default class ZipFS extends SynchronousFileSystem implements FileSystem {\n\tpublic static readonly Name = 'ZipFS';\n\n\tpublic static readonly Options: FileSystemOptions = {\n\t\tzipData: {\n\t\t\ttype: 'object',\n\t\t\tdescription: 'The zip file as a Buffer object.',\n\t\t\tvalidator: bufferValidator,\n\t\t},\n\t\tname: {\n\t\t\ttype: 'string',\n\t\t\toptional: true,\n\t\t\tdescription: 'The name of the zip file (optional).',\n\t\t},\n\t};\n\n\tpublic static readonly CompressionMethod = CompressionMethod;\n\n\t/**\n\t * Constructs a ZipFS instance with the given options.\n\t */\n\tpublic static Create(opts: ZipFSOptions, cb: BFSCallback<ZipFS>): void {\n\t\ttry {\n\t\t\tZipFS._computeIndex(opts.zipData, (e, zipTOC?) => {\n\t\t\t\tif (zipTOC) {\n\t\t\t\t\tconst fs = new ZipFS(zipTOC, opts.name);\n\t\t\t\t\tcb(null, fs);\n\t\t\t\t} else {\n\t\t\t\t\tcb(e);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tcb(e);\n\t\t}\n\t}\n\n\tpublic static CreateAsync(opts: ZipFSOptions): Promise<ZipFS> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Create(opts, (error, fs) => {\n\t\t\t\tif (error || !fs) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(fs);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic static isAvailable(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic static RegisterDecompressionMethod(m: CompressionMethod, fcn: (data: Buffer, compressedSize: number, uncompressedSize: number, flags: number) => Buffer): void {\n\t\tdecompressionMethods[m] = fcn;\n\t}\n\n\t/**\n\t * Locates the end of central directory record at the end of the file.\n\t * Throws an exception if it cannot be found.\n\t */\n\tprivate static _getEOCD(data: Buffer): EndOfCentralDirectory {\n\t\t// Unfortunately, the comment is variable size and up to 64K in size.\n\t\t// We assume that the magic signature does not appear in the comment, and\n\t\t// in the bytes between the comment and the signature. Other ZIP\n\t\t// implementations make this same assumption, since the alternative is to\n\t\t// read thread every entry in the file to get to it. :(\n\t\t// These are *negative* offsets from the end of the file.\n\t\tconst startOffset = 22;\n\t\tconst endOffset = Math.min(startOffset + 0xffff, data.length - 1);\n\t\t// There's not even a byte alignment guarantee on the comment so we need to\n\t\t// search byte by byte. *grumble grumble*\n\t\tfor (let i = startOffset; i < endOffset; i++) {\n\t\t\t// Magic number: EOCD Signature\n\t\t\tif (data.readUInt32LE(data.length - i) === 0x06054b50) {\n\t\t\t\treturn new EndOfCentralDirectory(data.slice(data.length - i));\n\t\t\t}\n\t\t}\n\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid ZIP file: Could not locate End of Central Directory signature.');\n\t}\n\n\tprivate static _addToIndex(cd: CentralDirectory, index: FileIndex<CentralDirectory>) {\n\t\t// Paths must be absolute, yet zip file paths are always relative to the\n\t\t// zip root. So we append '/' and call it a day.\n\t\tlet filename = cd.fileName();\n\t\tif (filename.charAt(0) === '/') {\n\t\t\tthrow new ApiError(ErrorCode.EPERM, `Unexpectedly encountered an absolute path in a zip file. Please file a bug.`);\n\t\t}\n\t\t// XXX: For the file index, strip the trailing '/'.\n\t\tif (filename.charAt(filename.length - 1) === '/') {\n\t\t\tfilename = filename.substr(0, filename.length - 1);\n\t\t}\n\n\t\tif (cd.isDirectory()) {\n\t\t\tindex.addPathFast('/' + filename, new DirInode<CentralDirectory>(cd));\n\t\t} else {\n\t\t\tindex.addPathFast('/' + filename, new FileInode<CentralDirectory>(cd));\n\t\t}\n\t}\n\n\tprivate static _computeIndex(data: Buffer, cb: BFSCallback<ZipTOC>) {\n\t\ttry {\n\t\t\tconst index: FileIndex<CentralDirectory> = new FileIndex<CentralDirectory>();\n\t\t\tconst eocd: EndOfCentralDirectory = ZipFS._getEOCD(data);\n\t\t\tif (eocd.diskNumber() !== eocd.cdDiskNumber()) {\n\t\t\t\treturn cb(new ApiError(ErrorCode.EINVAL, 'ZipFS does not support spanned zip files.'));\n\t\t\t}\n\n\t\t\tconst cdPtr = eocd.cdOffset();\n\t\t\tif (cdPtr === 0xffffffff) {\n\t\t\t\treturn cb(new ApiError(ErrorCode.EINVAL, 'ZipFS does not support Zip64.'));\n\t\t\t}\n\t\t\tconst cdEnd = cdPtr + eocd.cdSize();\n\t\t\tZipFS._computeIndexResponsive(data, index, cdPtr, cdEnd, cb, [], eocd);\n\t\t} catch (e) {\n\t\t\tcb(e);\n\t\t}\n\t}\n\n\tprivate static _computeIndexResponsiveTrampoline(\n\t\tdata: Buffer,\n\t\tindex: FileIndex<CentralDirectory>,\n\t\tcdPtr: number,\n\t\tcdEnd: number,\n\t\tcb: BFSCallback<ZipTOC>,\n\t\tcdEntries: CentralDirectory[],\n\t\teocd: EndOfCentralDirectory\n\t) {\n\t\ttry {\n\t\t\tZipFS._computeIndexResponsive(data, index, cdPtr, cdEnd, cb, cdEntries, eocd);\n\t\t} catch (e) {\n\t\t\tcb(e);\n\t\t}\n\t}\n\n\tprivate static _computeIndexResponsive(\n\t\tdata: Buffer,\n\t\tindex: FileIndex<CentralDirectory>,\n\t\tcdPtr: number,\n\t\tcdEnd: number,\n\t\tcb: BFSCallback<ZipTOC>,\n\t\tcdEntries: CentralDirectory[],\n\t\teocd: EndOfCentralDirectory\n\t) {\n\t\tif (cdPtr < cdEnd) {\n\t\t\tlet count = 0;\n\t\t\twhile (count++ < 200 && cdPtr < cdEnd) {\n\t\t\t\tconst cd: CentralDirectory = new CentralDirectory(data, data.slice(cdPtr));\n\t\t\t\tZipFS._addToIndex(cd, index);\n\t\t\t\tcdPtr += cd.totalSize();\n\t\t\t\tcdEntries.push(cd);\n\t\t\t}\n\t\t\tsetImmediate(() => {\n\t\t\t\tZipFS._computeIndexResponsiveTrampoline(data, index, cdPtr, cdEnd, cb, cdEntries, eocd);\n\t\t\t});\n\t\t} else {\n\t\t\tcb(null, new ZipTOC(index, cdEntries, eocd, data));\n\t\t}\n\t}\n\n\tprivate _index: FileIndex<CentralDirectory> = new FileIndex<CentralDirectory>();\n\tprivate _directoryEntries: CentralDirectory[] = [];\n\tprivate _eocd: EndOfCentralDirectory | null = null;\n\tprivate data: Buffer;\n\n\tprivate constructor(input: ZipTOC, private name: string = '') {\n\t\tsuper();\n\t\tthis._index = input.index;\n\t\tthis._directoryEntries = input.directoryEntries;\n\t\tthis._eocd = input.eocd;\n\t\tthis.data = input.data;\n\t}\n\n\tpublic getName(): string {\n\t\treturn ZipFS.Name + (this.name !== '' ? ` ${this.name}` : '');\n\t}\n\n\t/**\n\t * Get the CentralDirectory object for the given path.\n\t */\n\tpublic getCentralDirectoryEntry(path: string): CentralDirectory {\n\t\tconst inode = this._index.getInode(path);\n\t\tif (inode === null) {\n\t\t\tthrow ApiError.ENOENT(path);\n\t\t}\n\t\tif (isFileInode<CentralDirectory>(inode)) {\n\t\t\treturn inode.getData();\n\t\t} else if (isDirInode<CentralDirectory>(inode)) {\n\t\t\treturn inode.getData()!;\n\t\t} else {\n\t\t\t// Should never occur.\n\t\t\tthrow ApiError.EPERM(`Invalid inode: ${inode}`);\n\t\t}\n\t}\n\n\tpublic getCentralDirectoryEntryAt(index: number): CentralDirectory {\n\t\tconst dirEntry = this._directoryEntries[index];\n\t\tif (!dirEntry) {\n\t\t\tthrow new RangeError(`Invalid directory index: ${index}.`);\n\t\t}\n\t\treturn dirEntry;\n\t}\n\n\tpublic getNumberOfCentralDirectoryEntries(): number {\n\t\treturn this._directoryEntries.length;\n\t}\n\n\tpublic getEndOfCentralDirectory(): EndOfCentralDirectory | null {\n\t\treturn this._eocd;\n\t}\n\n\tpublic diskSpace(path: string, cb: (total: number, free: number) => void): void {\n\t\t// Read-only file system.\n\t\tcb(this.data.length, 0);\n\t}\n\n\tpublic isReadOnly(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic supportsLinks(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic supportsProps(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic supportsSynch(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic statSync(path: string, isLstat: boolean): Stats {\n\t\tconst inode = this._index.getInode(path);\n\t\tif (inode === null) {\n\t\t\tthrow ApiError.ENOENT(path);\n\t\t}\n\t\tlet stats: Stats;\n\t\tif (isFileInode<CentralDirectory>(inode)) {\n\t\t\tstats = inode.getData().getStats();\n\t\t} else if (isDirInode(inode)) {\n\t\t\tstats = inode.getStats();\n\t\t} else {\n\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid inode.');\n\t\t}\n\t\treturn stats;\n\t}\n\n\tpublic openSync(path: string, flags: FileFlag, mode: number): File {\n\t\t// INVARIANT: Cannot write to RO file systems.\n\t\tif (flags.isWriteable()) {\n\t\t\tthrow new ApiError(ErrorCode.EPERM, path);\n\t\t}\n\t\t// Check if the path exists, and is a file.\n\t\tconst inode = this._index.getInode(path);\n\t\tif (!inode) {\n\t\t\tthrow ApiError.ENOENT(path);\n\t\t} else if (isFileInode<CentralDirectory>(inode) || isDirInode<CentralDirectory>(inode)) {\n\t\t\tconst stats = !isDirInode<CentralDirectory>(inode) ? inode.getData().getStats() : inode.getStats();\n\t\t\tconst data = !isDirInode<CentralDirectory>(inode) ? inode.getData().getData() : inode.getStats().fileData;\n\t\t\tswitch (flags.pathExistsAction()) {\n\t\t\t\tcase ActionType.THROW_EXCEPTION:\n\t\t\t\tcase ActionType.TRUNCATE_FILE:\n\t\t\t\t\tthrow ApiError.EEXIST(path);\n\t\t\t\tcase ActionType.NOP:\n\t\t\t\t\treturn new NoSyncFile(this, path, flags, stats, data || undefined);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new ApiError(ErrorCode.EINVAL, 'Invalid FileMode object.');\n\t\t\t}\n\t\t} else {\n\t\t\tthrow ApiError.EPERM(path);\n\t\t}\n\t}\n\n\tpublic readdirSync(path: string): string[] {\n\t\t// Check if it exists.\n\t\tconst inode = this._index.getInode(path);\n\t\tif (!inode) {\n\t\t\tthrow ApiError.ENOENT(path);\n\t\t} else if (isDirInode(inode)) {\n\t\t\treturn inode.getListing();\n\t\t} else {\n\t\t\tthrow ApiError.ENOTDIR(path);\n\t\t}\n\t}\n\n\t/**\n\t * Specially-optimized readfile.\n\t */\n\tpublic readFileSync(fname: string, encoding: BufferEncoding, flag: FileFlag): any {\n\t\t// Get file.\n\t\tconst fd = this.openSync(fname, flag, 0x1a4);\n\t\ttry {\n\t\t\tconst fdCast = <NoSyncFile<ZipFS>>fd;\n\t\t\tconst fdBuff = <Buffer>fdCast.getBuffer();\n\t\t\tif (encoding === null) {\n\t\t\t\treturn copyingSlice(fdBuff);\n\t\t\t}\n\t\t\treturn fdBuff.toString(encoding);\n\t\t} finally {\n\t\t\tfd.closeSync();\n\t\t}\n\t}\n}\n\nZipFS.RegisterDecompressionMethod(CompressionMethod.DEFLATE, (data, compressedSize, uncompressedSize) => {\n\treturn inflateRaw(data.slice(0, compressedSize), { chunkSize: uncompressedSize });\n});\n\nZipFS.RegisterDecompressionMethod(CompressionMethod.STORED, (data, compressedSize, uncompressedSize) => {\n\treturn copyingSlice(data, 0, uncompressedSize);\n});\n"]}