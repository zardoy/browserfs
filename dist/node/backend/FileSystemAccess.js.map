{"version":3,"file":"FileSystemAccess.js","sourceRoot":"","sources":["../../../src/backend/FileSystemAccess.ts"],"names":[],"mappings":"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","sourcesContent":["import { basename, dirname, join } from 'path';\nimport { ApiError, ErrorCode } from '../core/api_error';\nimport Cred from '../core/cred';\nimport { File } from '../core/file';\nimport { FileFlag } from '../core/file_flag';\nimport { BaseFileSystem, BFSCallback, BFSOneArgCallback, FileSystem, FileSystemOptions } from '../core/file_system';\nimport { default as Stats, FileType } from '../core/stats';\nimport { emptyBuffer } from '../core/util';\nimport PreloadFile from '../generic/preload_file';\nimport { Buffer } from 'buffer';\n\ninterface FileSystemAccessFileSystemOptions {\n\thandle: FileSystemDirectoryHandle;\n}\n\ntype FileSystemKeysIterator = AsyncIterableIterator<string> & {\n\tnext: () => Promise<IteratorResult<string>>;\n};\n\ntype GlobalFile = globalThis.File & {\n\tarrayBuffer: () => Promise<ArrayBuffer>;\n};\n\nconst handleError =\n\t(cb: BFSCallback<never>, path = '') =>\n\t(error: Error) => {\n\t\tif (error.name === 'NotFoundError') {\n\t\t\treturn cb(ApiError.ENOENT(path));\n\t\t}\n\n\t\tcb(error as ApiError);\n\t};\n\nconst keysToArray = (directoryKeys: FileSystemKeysIterator, cb: BFSCallback<string[]>, path: string): void => {\n\tconst keys: string[] = [];\n\tconst iterateKeys = (): void => {\n\t\tdirectoryKeys\n\t\t\t.next()\n\t\t\t.then(({ done, value }) => {\n\t\t\t\tif (done) {\n\t\t\t\t\treturn cb(null, keys);\n\t\t\t\t}\n\n\t\t\t\tkeys.push(value);\n\t\t\t\titerateKeys();\n\t\t\t})\n\t\t\t.catch(handleError(cb, path));\n\t};\n\n\titerateKeys();\n};\n\nexport class FileSystemAccessFile extends PreloadFile<FileSystemAccessFileSystem> implements File {\n\tconstructor(_fs: FileSystemAccessFileSystem, _path: string, _flag: FileFlag, _stat: Stats, contents?: Buffer) {\n\t\tsuper(_fs, _path, _flag, _stat, contents);\n\t}\n\n\tpublic sync(cb: BFSOneArgCallback): void {\n\t\tif (this.isDirty()) {\n\t\t\tthis._fs._sync(this.getPath(), this.getBuffer(), this.getStats(), Cred.Root, (e?: ApiError) => {\n\t\t\t\tif (!e) {\n\t\t\t\t\tthis.resetDirty();\n\t\t\t\t}\n\t\t\t\tcb(e);\n\t\t\t});\n\t\t} else {\n\t\t\tcb();\n\t\t}\n\t}\n\n\tpublic close(cb: BFSOneArgCallback): void {\n\t\tthis.sync(cb);\n\t}\n}\n\nexport default class FileSystemAccessFileSystem extends BaseFileSystem implements FileSystem {\n\tpublic static readonly Name = 'FileSystemAccess';\n\n\tpublic static readonly Options: FileSystemOptions = {};\n\n\tpublic static Create({ handle }: FileSystemAccessFileSystemOptions, cb: BFSCallback<FileSystemAccessFileSystem>): void {\n\t\tcb(null, new FileSystemAccessFileSystem(handle));\n\t}\n\n\tpublic static CreateAsync(opts: FileSystemAccessFileSystemOptions): Promise<FileSystemAccessFileSystem> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Create(opts, (error, fs) => {\n\t\t\t\tif (error || !fs) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(fs);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic static isAvailable(): boolean {\n\t\treturn typeof FileSystemHandle === 'function';\n\t}\n\n\tprivate _handles: { [path: string]: FileSystemHandle };\n\n\tprivate constructor(handle: FileSystemDirectoryHandle) {\n\t\tsuper();\n\t\tthis._handles = { '/': handle };\n\t}\n\n\tpublic getName(): string {\n\t\treturn FileSystemAccessFileSystem.Name;\n\t}\n\n\tpublic isReadOnly(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic supportsSymlinks(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic supportsProps(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic supportsSynch(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic _sync(p: string, data: Buffer, stats: Stats, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis.stat(p, false, cred, (err, currentStats) => {\n\t\t\tif (stats.mtime !== currentStats!.mtime) {\n\t\t\t\tthis.writeFile(p, data, null, FileFlag.getFileFlag('w'), currentStats!.mode, cred, cb);\n\t\t\t} else {\n\t\t\t\tcb(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic rename(oldPath: string, newPath: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis.getHandle(oldPath, (sourceError, handle) => {\n\t\t\tif (sourceError) {\n\t\t\t\treturn cb(sourceError);\n\t\t\t}\n\t\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\t\tthis.readdir(oldPath, cred, (readDirError, files = []) => {\n\t\t\t\t\tif (readDirError) {\n\t\t\t\t\t\treturn cb(readDirError);\n\t\t\t\t\t}\n\t\t\t\t\tthis.mkdir(newPath, 'wx', cred, mkdirError => {\n\t\t\t\t\t\tif (mkdirError) {\n\t\t\t\t\t\t\treturn cb(mkdirError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (files.length === 0) {\n\t\t\t\t\t\t\tthis.unlink(oldPath, cred, cb);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfiles.forEach(file => this.rename(join(oldPath, file), join(newPath, file), cred, () => this.unlink(oldPath, cred, cb)));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (handle instanceof FileSystemFileHandle) {\n\t\t\t\thandle\n\t\t\t\t\t.getFile()\n\t\t\t\t\t.then((oldFile: GlobalFile) =>\n\t\t\t\t\t\tthis.getHandle(dirname(newPath), (destError, destFolder) => {\n\t\t\t\t\t\t\tif (destError) {\n\t\t\t\t\t\t\t\treturn cb(destError);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (destFolder instanceof FileSystemDirectoryHandle) {\n\t\t\t\t\t\t\t\tdestFolder\n\t\t\t\t\t\t\t\t\t.getFileHandle(basename(newPath), { create: true })\n\t\t\t\t\t\t\t\t\t.then(newFile =>\n\t\t\t\t\t\t\t\t\t\tnewFile\n\t\t\t\t\t\t\t\t\t\t\t.createWritable()\n\t\t\t\t\t\t\t\t\t\t\t.then(writable =>\n\t\t\t\t\t\t\t\t\t\t\t\toldFile\n\t\t\t\t\t\t\t\t\t\t\t\t\t.arrayBuffer()\n\t\t\t\t\t\t\t\t\t\t\t\t\t.then(buffer =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twritable\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.write(buffer)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twritable.close();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.unlink(oldPath, cred, cb);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.catch(handleError(cb, newPath))\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.catch(handleError(cb, oldPath))\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t.catch(handleError(cb, newPath))\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.catch(handleError(cb, newPath));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\t.catch(handleError(cb, oldPath));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic writeFile(fname: string, data: any, encoding: string | null, flag: FileFlag, mode: number, cred: Cred, cb: BFSCallback<File | undefined>, createFile?: boolean): void {\n\t\tthis.getHandle(dirname(fname), (error, handle) => {\n\t\t\tif (error) {\n\t\t\t\treturn cb(error);\n\t\t\t}\n\t\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\t\thandle\n\t\t\t\t\t.getFileHandle(basename(fname), { create: true })\n\t\t\t\t\t.then(file =>\n\t\t\t\t\t\tfile\n\t\t\t\t\t\t\t.createWritable()\n\t\t\t\t\t\t\t.then(writable =>\n\t\t\t\t\t\t\t\twritable\n\t\t\t\t\t\t\t\t\t.write(data)\n\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\twritable.close().catch(handleError(cb, fname));\n\t\t\t\t\t\t\t\t\t\tcb(null, createFile ? this.newFile(fname, flag, data) : undefined);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(handleError(cb, fname))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.catch(handleError(cb, fname))\n\t\t\t\t\t)\n\t\t\t\t\t.catch(handleError(cb, fname));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic createFile(p: string, flag: FileFlag, mode: number, cred: Cred, cb: BFSCallback<File>): void {\n\t\tthis.writeFile(p, emptyBuffer(), null, flag, mode, cred, cb, true);\n\t}\n\n\tpublic stat(path: string, isLstat: boolean, cred: Cred, cb: BFSCallback<Stats>): void {\n\t\tthis.getHandle(path, (error, handle) => {\n\t\t\tif (error) {\n\t\t\t\treturn cb(error);\n\t\t\t}\n\t\t\tif (!handle) {\n\t\t\t\treturn cb(ApiError.FileError(ErrorCode.EINVAL, path));\n\t\t\t}\n\t\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\t\treturn cb(null, new Stats(FileType.DIRECTORY, 4096));\n\t\t\t}\n\t\t\tif (handle instanceof FileSystemFileHandle) {\n\t\t\t\thandle\n\t\t\t\t\t.getFile()\n\t\t\t\t\t.then(({ lastModified, size }) => cb(null, new Stats(FileType.FILE, size, undefined, undefined, lastModified)))\n\t\t\t\t\t.catch(handleError(cb, path));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic exists(p: string, cred: Cred, cb: (exists: boolean) => void): void {\n\t\tthis.getHandle(p, error => cb(error === null));\n\t}\n\n\tpublic openFile(path: string, flags: FileFlag, cred: Cred, cb: BFSCallback<File>): void {\n\t\tthis.getHandle(path, (error, handle) => {\n\t\t\tif (error) {\n\t\t\t\treturn cb(error);\n\t\t\t}\n\t\t\tif (handle instanceof FileSystemFileHandle) {\n\t\t\t\thandle\n\t\t\t\t\t.getFile()\n\t\t\t\t\t.then((file: GlobalFile) =>\n\t\t\t\t\t\tfile\n\t\t\t\t\t\t\t.arrayBuffer()\n\t\t\t\t\t\t\t.then(buffer => cb(null, this.newFile(path, flags, buffer, file.size, file.lastModified)))\n\t\t\t\t\t\t\t.catch(handleError(cb, path))\n\t\t\t\t\t)\n\t\t\t\t\t.catch(handleError(cb, path));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic unlink(path: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis.getHandle(dirname(path), (error, handle) => {\n\t\t\tif (error) {\n\t\t\t\treturn cb(error);\n\t\t\t}\n\t\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\t\thandle\n\t\t\t\t\t.removeEntry(basename(path), { recursive: true })\n\t\t\t\t\t.then(() => cb(null))\n\t\t\t\t\t.catch(handleError(cb, path));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic rmdir(path: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis.unlink(path, cred, cb);\n\t}\n\n\tpublic mkdir(p: string, mode: any, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tconst overwrite = mode && mode.flag && mode.flag.includes('w') && !mode.flag.includes('x');\n\n\t\tthis.getHandle(p, (_existingError, existingHandle) => {\n\t\t\tif (existingHandle && !overwrite) {\n\t\t\t\treturn cb(ApiError.EEXIST(p));\n\t\t\t}\n\n\t\t\tthis.getHandle(dirname(p), (error, handle) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn cb(error);\n\t\t\t\t}\n\t\t\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\t\t\thandle\n\t\t\t\t\t\t.getDirectoryHandle(basename(p), { create: true })\n\t\t\t\t\t\t.then(() => cb(null))\n\t\t\t\t\t\t.catch(handleError(cb, p));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic readdir(path: string, cred: Cred, cb: BFSCallback<string[]>): void {\n\t\tthis.getHandle(path, (readError, handle) => {\n\t\t\tif (readError) {\n\t\t\t\treturn cb(readError);\n\t\t\t}\n\t\t\tif (handle instanceof FileSystemDirectoryHandle) {\n\t\t\t\tkeysToArray(handle.keys() as FileSystemKeysIterator, cb, path);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate newFile(path: string, flag: FileFlag, data: ArrayBuffer, size?: number, lastModified?: number): File {\n\t\treturn new FileSystemAccessFile(this, path, flag, new Stats(FileType.FILE, size || 0, undefined, undefined, lastModified || new Date().getTime()), Buffer.from(data));\n\t}\n\n\tprivate getHandle(path: string, cb: BFSCallback<FileSystemHandle>): void {\n\t\tif (path === '/') {\n\t\t\treturn cb(null, this._handles['/']);\n\t\t}\n\n\t\tlet walkedPath = '/';\n\t\tconst [, ...pathParts] = path.split('/');\n\t\tconst getHandleParts = ([pathPart, ...remainingPathParts]: string[]) => {\n\t\t\tconst walkingPath = join(walkedPath, pathPart);\n\t\t\tconst continueWalk = (handle: FileSystemHandle) => {\n\t\t\t\twalkedPath = walkingPath;\n\t\t\t\tthis._handles[walkedPath] = handle;\n\n\t\t\t\tif (remainingPathParts.length === 0) {\n\t\t\t\t\treturn cb(null, this._handles[path]);\n\t\t\t\t}\n\n\t\t\t\tgetHandleParts(remainingPathParts);\n\t\t\t};\n\t\t\tconst handle = this._handles[walkedPath] as FileSystemDirectoryHandle;\n\n\t\t\thandle\n\t\t\t\t.getDirectoryHandle(pathPart)\n\t\t\t\t.then(continueWalk)\n\t\t\t\t.catch((error: Error) => {\n\t\t\t\t\tif (error.name === 'TypeMismatchError') {\n\t\t\t\t\t\thandle.getFileHandle(pathPart).then(continueWalk).catch(handleError(cb, walkingPath));\n\t\t\t\t\t} else if (error.message === 'Name is not allowed.') {\n\t\t\t\t\t\tcb(new ApiError(ErrorCode.ENOENT, error.message, walkingPath));\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleError(cb, walkingPath)(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n\n\t\tgetHandleParts(pathParts);\n\t}\n}\n"]}