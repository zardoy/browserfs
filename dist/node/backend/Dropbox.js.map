{"version":3,"file":"Dropbox.js","sourceRoot":"","sources":["../../../src/backend/Dropbox.ts"],"names":[],"mappings":"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","sourcesContent":["import PreloadFile from '../generic/preload_file';\nimport { BaseFileSystem, FileSystem, BFSOneArgCallback, BFSCallback, FileSystemOptions } from '../core/file_system';\nimport { FileFlag } from '../core/file_flag';\nimport { default as Stats, FileType } from '../core/stats';\nimport { ApiError, ErrorCode } from '../core/api_error';\nimport { File } from '../core/file';\nimport { arrayBuffer2Buffer, buffer2ArrayBuffer } from '../core/util';\nimport { Dropbox } from '../generic/dropbox_bridge_actual';\nimport setImmediate from '../generic/setImmediate';\nimport { dirname } from 'path';\nimport Cred from '../core/cred';\nimport { Buffer } from 'buffer';\ntype DropboxClient = DropboxTypes.Dropbox;\n\n/**\n * Dropbox paths do not begin with a /, they just begin with a folder at the root node.\n * Here, we strip the `/`.\n * @param p An absolute path\n */\nfunction FixPath(p: string): string {\n\tif (p === '/') {\n\t\treturn '';\n\t} else {\n\t\treturn p;\n\t}\n}\n\n/**\n * HACK: Dropbox errors are FUBAR'd sometimes.\n * @url https://github.com/dropbox/dropbox-sdk-js/issues/146\n * @param e\n */\nfunction ExtractTheFuckingError<T>(e: DropboxTypes.Error<T>): T {\n\tconst obj = <any>e.error;\n\tif (obj['.tag']) {\n\t\t// Everything is OK.\n\t\treturn obj;\n\t} else if (obj['error']) {\n\t\t// Terrible nested object bug.\n\t\tconst obj2 = obj.error;\n\t\tif (obj2['.tag']) {\n\t\t\treturn obj2;\n\t\t} else if (obj2['reason'] && obj2['reason']['.tag']) {\n\t\t\treturn obj2.reason;\n\t\t} else {\n\t\t\treturn obj2;\n\t\t}\n\t} else if (typeof obj === 'string') {\n\t\t// Might be a fucking JSON object error.\n\t\ttry {\n\t\t\tconst obj2 = JSON.parse(obj);\n\t\t\tif (obj2['error'] && obj2['error']['reason'] && obj2['error']['reason']['.tag']) {\n\t\t\t\treturn obj2.error.reason;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Nope. Give up.\n\t\t}\n\t}\n\treturn <any>obj;\n}\n\n/**\n * Returns a user-facing error message given an error.\n *\n * HACK: Dropbox error messages sometimes lack a `user_message` field.\n * Sometimes, they are even strings. Ugh.\n * @url https://github.com/dropbox/dropbox-sdk-js/issues/146\n * @url https://github.com/dropbox/dropbox-sdk-js/issues/145\n * @url https://github.com/dropbox/dropbox-sdk-js/issues/144\n * @param err An error.\n */\nfunction GetErrorMessage(err: DropboxTypes.Error<any>): string {\n\tif (err['user_message']) {\n\t\treturn err.user_message.text;\n\t} else if (err['error_summary']) {\n\t\treturn err.error_summary;\n\t} else if (typeof err.error === 'string') {\n\t\treturn err.error;\n\t} else if (typeof err.error === 'object') {\n\t\t// DROPBOX BUG: Sometimes, error is a nested error.\n\t\treturn GetErrorMessage(err.error);\n\t} else {\n\t\tthrow new Error(`Dropbox's servers gave us a garbage error message: ${JSON.stringify(err)}`);\n\t}\n}\n\nfunction LookupErrorToError(err: DropboxTypes.files.LookupError, p: string, msg: string): ApiError {\n\tswitch (err['.tag']) {\n\t\tcase 'malformed_path':\n\t\t\treturn new ApiError(ErrorCode.EBADF, msg, p);\n\t\tcase 'not_found':\n\t\t\treturn ApiError.ENOENT(p);\n\t\tcase 'not_file':\n\t\t\treturn ApiError.EISDIR(p);\n\t\tcase 'not_folder':\n\t\t\treturn ApiError.ENOTDIR(p);\n\t\tcase 'restricted_content':\n\t\t\treturn ApiError.EPERM(p);\n\t\tcase 'other':\n\t\tdefault:\n\t\t\treturn new ApiError(ErrorCode.EIO, msg, p);\n\t}\n}\n\nfunction WriteErrorToError(err: DropboxTypes.files.WriteError, p: string, msg: string): ApiError {\n\tswitch (err['.tag']) {\n\t\tcase 'malformed_path':\n\t\tcase 'disallowed_name':\n\t\t\treturn new ApiError(ErrorCode.EBADF, msg, p);\n\t\tcase 'conflict':\n\t\tcase 'no_write_permission':\n\t\tcase 'team_folder':\n\t\t\treturn ApiError.EPERM(p);\n\t\tcase 'insufficient_space':\n\t\t\treturn new ApiError(ErrorCode.ENOSPC, msg);\n\t\tcase 'other':\n\t\tdefault:\n\t\t\treturn new ApiError(ErrorCode.EIO, msg, p);\n\t}\n}\n\nfunction FilesDeleteWrapped(client: DropboxClient, p: string, cb: BFSOneArgCallback): void {\n\tconst arg: DropboxTypes.files.DeleteArg = {\n\t\tpath: FixPath(p),\n\t};\n\tclient\n\t\t.filesDeleteV2(arg)\n\t\t.then(() => {\n\t\t\tcb();\n\t\t})\n\t\t.catch((e: DropboxTypes.Error<DropboxTypes.files.DeleteError>) => {\n\t\t\tconst err = ExtractTheFuckingError(e);\n\t\t\tswitch (err['.tag']) {\n\t\t\t\tcase 'path_lookup':\n\t\t\t\t\tcb(LookupErrorToError((<DropboxTypes.files.DeleteErrorPathLookup>err).path_lookup, p, GetErrorMessage(e)));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'path_write':\n\t\t\t\t\tcb(WriteErrorToError((<DropboxTypes.files.DeleteErrorPathWrite>err).path_write, p, GetErrorMessage(e)));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'too_many_write_operations':\n\t\t\t\t\tsetTimeout(() => FilesDeleteWrapped(client, p, cb), 500 + 300 * Math.random());\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'other':\n\t\t\t\tdefault:\n\t\t\t\t\tcb(new ApiError(ErrorCode.EIO, GetErrorMessage(e), p));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n}\n\nexport class DropboxFile extends PreloadFile<DropboxFileSystem> implements File {\n\tconstructor(_fs: DropboxFileSystem, _path: string, _flag: FileFlag, _stat: Stats, contents?: Buffer) {\n\t\tsuper(_fs, _path, _flag, _stat, contents);\n\t}\n\n\tpublic sync(cb: BFSOneArgCallback): void {\n\t\tthis._fs._syncFile(this.getPath(), this.getBuffer(), cb);\n\t}\n\n\tpublic close(cb: BFSOneArgCallback): void {\n\t\tthis.sync(cb);\n\t}\n}\n\n/**\n * Options for the Dropbox file system.\n */\nexport interface DropboxFileSystemOptions {\n\t// An *authenticated* Dropbox client from the 2.x JS SDK.\n\tclient: DropboxTypes.Dropbox;\n}\n\n/**\n * A read/write file system backed by Dropbox cloud storage.\n *\n * Uses the Dropbox V2 API, and the 2.x JS SDK.\n */\nexport default class DropboxFileSystem extends BaseFileSystem implements FileSystem {\n\tpublic static readonly Name = 'DropboxV2';\n\n\tpublic static readonly Options: FileSystemOptions = {\n\t\tclient: {\n\t\t\ttype: 'object',\n\t\t\tdescription: 'An *authenticated* Dropbox client. Must be from the 2.5.x JS SDK.',\n\t\t},\n\t};\n\n\t/**\n\t * Creates a new DropboxFileSystem instance with the given options.\n\t * Must be given an *authenticated* Dropbox client from 2.x JS SDK.\n\t */\n\tpublic static Create(opts: DropboxFileSystemOptions, cb: BFSCallback<DropboxFileSystem>): void {\n\t\tcb(null, new DropboxFileSystem(opts.client));\n\t}\n\n\t/**\n\t * Asynchronously creates a new DropboxFileSystem instance with the given options.\n\t * Must be given an *authenticated* Dropbox client from 2.x JS SDK.\n\t */\n\tpublic static CreateAsync(opts: DropboxFileSystemOptions): Promise<DropboxFileSystem> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.Create(opts, (error, fs) => {\n\t\t\t\tif (error || !fs) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(fs);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic static isAvailable(): boolean {\n\t\t// Checks if the Dropbox library is loaded.\n\t\treturn typeof Dropbox !== 'undefined';\n\t}\n\n\tprivate _client: DropboxTypes.Dropbox;\n\n\tprivate constructor(client: DropboxTypes.Dropbox) {\n\t\tsuper();\n\t\tthis._client = client;\n\t}\n\n\tpublic getName(): string {\n\t\treturn DropboxFileSystem.Name;\n\t}\n\n\tpublic isReadOnly(): boolean {\n\t\treturn false;\n\t}\n\n\t// Dropbox doesn't support symlinks, properties, or synchronous calls\n\t// TODO: does it???\n\n\tpublic supportsSymlinks(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic supportsProps(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic supportsSynch(): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Deletes *everything* in the file system. Mainly intended for unit testing!\n\t * @param mainCb Called when operation completes.\n\t */\n\tpublic empty(mainCb: BFSOneArgCallback): void {\n\t\tthis.readdir('/', Cred.Root, (e, paths?) => {\n\t\t\tif (paths) {\n\t\t\t\tconst next = (e?: ApiError) => {\n\t\t\t\t\tif (paths.length === 0) {\n\t\t\t\t\t\tmainCb();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tFilesDeleteWrapped(this._client, <string>paths.shift(), next);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tnext();\n\t\t\t} else {\n\t\t\t\tmainCb(e);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic rename(oldPath: string, newPath: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\t// Dropbox doesn't let you rename things over existing things, but POSIX does.\n\t\t// So, we need to see if newPath exists...\n\t\tthis.stat(newPath, false, cred, (e, stats?) => {\n\t\t\tconst rename = () => {\n\t\t\t\tconst relocationArg: DropboxTypes.files.RelocationArg = {\n\t\t\t\t\tfrom_path: FixPath(oldPath),\n\t\t\t\t\tto_path: FixPath(newPath),\n\t\t\t\t};\n\t\t\t\tthis._client\n\t\t\t\t\t.filesMoveV2(relocationArg)\n\t\t\t\t\t.then(() => cb())\n\t\t\t\t\t.catch(function (e: DropboxTypes.Error<DropboxTypes.files.RelocationError>) {\n\t\t\t\t\t\tconst err = ExtractTheFuckingError(e);\n\t\t\t\t\t\tswitch (err['.tag']) {\n\t\t\t\t\t\t\tcase 'from_lookup':\n\t\t\t\t\t\t\t\tcb(LookupErrorToError((<DropboxTypes.files.RelocationErrorFromLookup>err).from_lookup, oldPath, GetErrorMessage(e)));\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'from_write':\n\t\t\t\t\t\t\t\tcb(WriteErrorToError((<DropboxTypes.files.RelocationErrorFromWrite>err).from_write, oldPath, GetErrorMessage(e)));\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'to':\n\t\t\t\t\t\t\t\tcb(WriteErrorToError((<DropboxTypes.files.RelocationErrorTo>err).to, newPath, GetErrorMessage(e)));\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'cant_copy_shared_folder':\n\t\t\t\t\t\t\tcase 'cant_nest_shared_folder':\n\t\t\t\t\t\t\t\tcb(new ApiError(ErrorCode.EPERM, GetErrorMessage(e), oldPath));\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'cant_move_folder_into_itself':\n\t\t\t\t\t\t\tcase 'duplicated_or_nested_paths':\n\t\t\t\t\t\t\t\tcb(new ApiError(ErrorCode.EBADF, GetErrorMessage(e), oldPath));\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'too_many_files':\n\t\t\t\t\t\t\t\tcb(new ApiError(ErrorCode.ENOSPC, GetErrorMessage(e), oldPath));\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'other':\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tcb(new ApiError(ErrorCode.EIO, GetErrorMessage(e), oldPath));\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t};\n\t\t\tif (e) {\n\t\t\t\t// Doesn't exist. Proceed!\n\t\t\t\trename();\n\t\t\t} else if (oldPath === newPath) {\n\t\t\t\t// NOP if the path exists. Error if it doesn't exist.\n\t\t\t\tif (e) {\n\t\t\t\t\tcb(ApiError.ENOENT(newPath));\n\t\t\t\t} else {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t} else if (stats && stats.isDirectory()) {\n\t\t\t\t// Exists, is a directory. Cannot rename over an existing directory.\n\t\t\t\tcb(ApiError.EISDIR(newPath));\n\t\t\t} else {\n\t\t\t\t// Exists, is a file, and differs from oldPath. Delete and rename.\n\t\t\t\tthis.unlink(newPath, cred, e => {\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\tcb(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trename();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic stat(path: string, isLstat: boolean, cred: Cred, cb: BFSCallback<Stats>): void {\n\t\tif (path === '/') {\n\t\t\t// Dropbox doesn't support querying the root directory.\n\t\t\tsetImmediate(function () {\n\t\t\t\tcb(null, new Stats(FileType.DIRECTORY, 4096));\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst arg: DropboxTypes.files.GetMetadataArg = {\n\t\t\tpath: FixPath(path),\n\t\t};\n\t\tthis._client\n\t\t\t.filesGetMetadata(arg)\n\t\t\t.then(ref => {\n\t\t\t\tswitch (ref['.tag']) {\n\t\t\t\t\tcase 'file':\n\t\t\t\t\t\tconst fileMetadata = <DropboxTypes.files.FileMetadata>ref;\n\t\t\t\t\t\t// TODO: Parse time fields.\n\t\t\t\t\t\tcb(null, new Stats(FileType.FILE, fileMetadata.size));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'folder':\n\t\t\t\t\t\tcb(null, new Stats(FileType.DIRECTORY, 4096));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'deleted':\n\t\t\t\t\t\tcb(ApiError.ENOENT(path));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Unknown.\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e: DropboxTypes.Error<DropboxTypes.files.GetMetadataError>) => {\n\t\t\t\tconst err = ExtractTheFuckingError(e);\n\t\t\t\tswitch (err['.tag']) {\n\t\t\t\t\tcase 'path':\n\t\t\t\t\t\tcb(LookupErrorToError(err.path, path, GetErrorMessage(e)));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcb(new ApiError(ErrorCode.EIO, GetErrorMessage(e), path));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tpublic openFile(path: string, flags: FileFlag, cred: Cred, cb: BFSCallback<File>): void {\n\t\tconst downloadArg: DropboxTypes.files.DownloadArg = {\n\t\t\tpath: FixPath(path),\n\t\t};\n\t\tthis._client\n\t\t\t.filesDownload(downloadArg)\n\t\t\t.then(res => {\n\t\t\t\tconst b: Blob = (<any>res).fileBlob;\n\t\t\t\tconst fr = new FileReader();\n\t\t\t\tfr.onload = () => {\n\t\t\t\t\tconst ab = fr.result as ArrayBuffer;\n\t\t\t\t\tcb(null, new DropboxFile(this, path, flags, new Stats(FileType.FILE, ab.byteLength), arrayBuffer2Buffer(ab)));\n\t\t\t\t};\n\t\t\t\tfr.readAsArrayBuffer(b);\n\t\t\t})\n\t\t\t.catch((e: DropboxTypes.Error<DropboxTypes.files.DownloadError>) => {\n\t\t\t\tconst err = ExtractTheFuckingError(e);\n\t\t\t\tswitch (err['.tag']) {\n\t\t\t\t\tcase 'path':\n\t\t\t\t\t\tconst dpError = <DropboxTypes.files.DownloadErrorPath>err;\n\t\t\t\t\t\tcb(LookupErrorToError(dpError.path, path, GetErrorMessage(e)));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'other':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcb(new ApiError(ErrorCode.EIO, GetErrorMessage(e), path));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tpublic createFile(p: string, flags: FileFlag, mode: number, cred: Cred, cb: BFSCallback<File>): void {\n\t\tconst fileData = Buffer.alloc(0);\n\t\tconst blob = new Blob([buffer2ArrayBuffer(fileData) as ArrayBuffer], { type: 'octet/stream' });\n\t\tconst commitInfo: DropboxTypes.files.CommitInfo = {\n\t\t\tcontents: blob,\n\t\t\tpath: FixPath(p),\n\t\t};\n\t\tthis._client\n\t\t\t.filesUpload(commitInfo)\n\t\t\t.then(metadata => {\n\t\t\t\tcb(null, new DropboxFile(this, p, flags, new Stats(FileType.FILE, 0), fileData));\n\t\t\t})\n\t\t\t.catch((e: DropboxTypes.Error<DropboxTypes.files.UploadError>) => {\n\t\t\t\tconst err = ExtractTheFuckingError(e);\n\t\t\t\t// HACK: Casting to 'any' since tag can be 'too_many_write_operations'.\n\t\t\t\tswitch (<string>err['.tag']) {\n\t\t\t\t\tcase 'path':\n\t\t\t\t\t\tconst upError = <DropboxTypes.files.UploadErrorPath>err;\n\t\t\t\t\t\tcb(WriteErrorToError((upError as any).path.reason, p, GetErrorMessage(e)));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'too_many_write_operations':\n\t\t\t\t\t\t// Retry in (500, 800) ms.\n\t\t\t\t\t\tsetTimeout(() => this.createFile(p, flags, mode, cred, cb), 500 + 300 * Math.random());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'other':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcb(new ApiError(ErrorCode.EIO, GetErrorMessage(e), p));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/**\n\t * Delete a file\n\t */\n\tpublic unlink(path: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\t// Must be a file. Check first.\n\t\tthis.stat(path, false, cred, (e, stat) => {\n\t\t\tif (stat) {\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tcb(ApiError.EISDIR(path));\n\t\t\t\t} else {\n\t\t\t\t\tFilesDeleteWrapped(this._client, path, cb);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcb(e);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Delete a directory\n\t */\n\tpublic rmdir(path: string, cred: Cred, cb: BFSOneArgCallback): void {\n\t\tthis.readdir(path, cred, (e, paths) => {\n\t\t\tif (paths) {\n\t\t\t\tif (paths.length > 0) {\n\t\t\t\t\tcb(ApiError.ENOTEMPTY(path));\n\t\t\t\t} else {\n\t\t\t\t\tFilesDeleteWrapped(this._client, path, cb);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcb(e);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Create a directory\n\t */\n\tpublic mkdir(p: string, mode: number, cred: Cred, cb: BFSOneArgCallback): void {\n\t\t// Dropbox's create_folder is recursive. Check if parent exists.\n\t\tconst parent = dirname(p);\n\t\tthis.stat(parent, false, cred, (e, stats?) => {\n\t\t\tif (e) {\n\t\t\t\tcb(e);\n\t\t\t} else if (stats && !stats.isDirectory()) {\n\t\t\t\tcb(ApiError.ENOTDIR(parent));\n\t\t\t} else {\n\t\t\t\tconst arg: DropboxTypes.files.CreateFolderArg = {\n\t\t\t\t\tpath: FixPath(p),\n\t\t\t\t};\n\t\t\t\tthis._client\n\t\t\t\t\t.filesCreateFolderV2(arg)\n\t\t\t\t\t.then(() => cb())\n\t\t\t\t\t.catch((e: DropboxTypes.Error<DropboxTypes.files.CreateFolderError>) => {\n\t\t\t\t\t\tconst err = ExtractTheFuckingError(e);\n\t\t\t\t\t\tif (<string>err['.tag'] === 'too_many_write_operations') {\n\t\t\t\t\t\t\t// Retry in a bit.\n\t\t\t\t\t\t\tsetTimeout(() => this.mkdir(p, mode, cred, cb), 500 + 300 * Math.random());\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcb(WriteErrorToError(ExtractTheFuckingError(e).path, p, GetErrorMessage(e)));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Get the names of the files in a directory\n\t */\n\tpublic readdir(path: string, cred: Cred, cb: BFSCallback<string[]>): void {\n\t\tconst arg: DropboxTypes.files.ListFolderArg = {\n\t\t\tpath: FixPath(path),\n\t\t};\n\t\tthis._client\n\t\t\t.filesListFolder(arg)\n\t\t\t.then(res => {\n\t\t\t\tContinueReadingDir(this._client, path, res, [], cb);\n\t\t\t})\n\t\t\t.catch((e: DropboxTypes.Error<DropboxTypes.files.ListFolderError>) => {\n\t\t\t\tProcessListFolderError(e, path, cb);\n\t\t\t});\n\t}\n\n\t/**\n\t * (Internal) Syncs file to Dropbox.\n\t */\n\tpublic _syncFile(p: string, d: Buffer, cb: BFSOneArgCallback): void {\n\t\tconst blob = new Blob([buffer2ArrayBuffer(d) as ArrayBuffer], { type: 'octet/stream' });\n\t\tconst arg: DropboxTypes.files.CommitInfo = {\n\t\t\tcontents: blob,\n\t\t\tpath: FixPath(p),\n\t\t\tmode: {\n\t\t\t\t'.tag': 'overwrite',\n\t\t\t},\n\t\t};\n\t\tthis._client\n\t\t\t.filesUpload(arg)\n\t\t\t.then(() => {\n\t\t\t\tcb();\n\t\t\t})\n\t\t\t.catch((e: DropboxTypes.Error<DropboxTypes.files.UploadError>) => {\n\t\t\t\tconst err = ExtractTheFuckingError(e);\n\t\t\t\tswitch (<string>err['.tag']) {\n\t\t\t\t\tcase 'path':\n\t\t\t\t\t\tconst upError = <DropboxTypes.files.UploadErrorPath>err;\n\t\t\t\t\t\tcb(WriteErrorToError((upError as any).path.reason, p, GetErrorMessage(e)));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'too_many_write_operations':\n\t\t\t\t\t\tsetTimeout(() => this._syncFile(p, d, cb), 500 + 300 * Math.random());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'other':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcb(new ApiError(ErrorCode.EIO, GetErrorMessage(e), p));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n}\n\nfunction ProcessListFolderError(e: DropboxTypes.Error<DropboxTypes.files.ListFolderError>, path: string, cb: BFSCallback<string[]>): void {\n\tconst err = ExtractTheFuckingError(e);\n\tswitch (err['.tag']) {\n\t\tcase 'path':\n\t\t\tconst pathError = <DropboxTypes.files.ListFolderErrorPath>err;\n\t\t\tcb(LookupErrorToError(pathError.path, path, GetErrorMessage(e)));\n\t\t\tbreak;\n\t\tcase 'other':\n\t\tdefault:\n\t\t\tcb(new ApiError(ErrorCode.EIO, GetErrorMessage(e), path));\n\t\t\tbreak;\n\t}\n}\n\nfunction ContinueReadingDir(client: DropboxClient, path: string, res: DropboxTypes.files.ListFolderResult, previousEntries: string[], cb: BFSCallback<string[]>): void {\n\tconst newEntries = <string[]>res.entries.map(e => e.path_display).filter(p => !!p);\n\tconst entries = previousEntries.concat(newEntries);\n\tif (!res.has_more) {\n\t\tcb(null, entries);\n\t} else {\n\t\tconst arg: DropboxTypes.files.ListFolderContinueArg = {\n\t\t\tcursor: res.cursor,\n\t\t};\n\t\tclient\n\t\t\t.filesListFolderContinue(arg)\n\t\t\t.then(res => {\n\t\t\t\tContinueReadingDir(client, path, res, entries, cb);\n\t\t\t})\n\t\t\t.catch((e: DropboxTypes.Error<DropboxTypes.files.ListFolderError>) => {\n\t\t\t\tProcessListFolderError(e, path, cb);\n\t\t\t});\n\t}\n}\n"]}